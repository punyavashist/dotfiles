<?xml version="1.0"?>
<root>

<!-- Modif def -->
<modifierdef>MY_CAPSLOCK</modifierdef>
<modifierdef>MY_OPTION_L</modifierdef>
<modifierdef>MY_CONTROL_L</modifierdef>

<!-- App def  -->
<appdef>
<appname>MINDNODE</appname>
<equal>com.ideasoncanvas.MindNodeMac</equal>
</appdef>

<!-- KM projects -->
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_PROJECT_HAMMERSPOON</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "proj: hammerspoon"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_PROJECT_KNOWLEDGE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "proj: knowledge"
end tell
'
</url>
</vkopenurldef>

<!-- KM Safari urls -->
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_GITHUB</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: GitHub"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_WHATSAPP</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: whatsapp"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_LISTENONREPEAT</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: ListenOnRepeat"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_FIGMA</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: figma"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_CANVAS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: canvas"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_GOOGLE_DOCS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: google docs"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_RIOT</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: riot.im"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_GITTER</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Gitter"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_DISCORD</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Discord"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_BITLY</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: bit.ly"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_DRAW</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: draw.io"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_BRILLIANT</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Brilliant"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_DROPBOX</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Dropbox"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_REPL</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Repl"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_TWITTER</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Twitter"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_TWITCH</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Twitch"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_CODEWARS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Code wars"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_GITBOOKS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Gitbooks"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_ARXIV</name>
<url type="shell"> osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Arxiv"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_YOUTUBE_AUTOPLAY</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: YouTube autoplay"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_GOOGLE_DRIVE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Google drive"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_HASHNODE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Hashnode"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_GOOGLE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Google"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_GITHUB</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Github"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_CODESANDBOX</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Codesandbox"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_DUCKDUCKGO</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: DuckDuckGo"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_NETLIFY</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Netlify"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_GITHUB_FRONT</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: GitHub - front"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_UNSPLASH</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Unsplash"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_AWS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: AWS"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_LICHESS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Lichess"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_IMGUR</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Imgur"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_TRAVIS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Travis"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_LOCALHOST</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: localhost"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_GO_PLAYGROUND</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Go playground"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_REGEX101</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Regex101"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_NPM</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Npm"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_POCKET</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Pocket"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_ANALYTICS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Google analytics"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_LEARN_ANYTHING</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Learn Anything"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_DRIBBLE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Dribble"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_STACK</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Stack"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_SOURCEGRAPH</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Sourcegraph"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_QUORA_ANSWER</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Quora answer"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_SLACK</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Slack"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_REDDIT_TOP_NEW</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Reddit top new"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_MOZILLA_DEV</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Mozilla dev"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_PINBOARD_RECENT</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Pinboard recent"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_GITHUB_TRENDING</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: GitHub trending"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_STACK_REAL_TIME</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Stack real time"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_STACK_EXCHANGE_HOT</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Stack exchange hot"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_LOBSTERS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Lobsters"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_COURSERA</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Coursera"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_CODE_UNIVERSITY</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Coding interview university"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_PINBOARD</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Pinboard"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_JSFIDDLE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Jsfiddle"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_KAGGLE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Kaggle"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_REDDIT_ALL</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: All reddit"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_HABRAHABR</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Habrahabr"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_CODEPEN</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Codepen"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_HACKERRANK</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Hackerrank"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_MEDIUM</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Medium"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_WIKI</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Wiki"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_PRODUCT_HUNT</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Product hunt"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_REDDIT_UNDREAD_MESSAGES</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Reddit unread"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_HACKER_NEWS_NEW</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Hacker news new"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_REDDIT</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Reddit"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_MIT_COURSES</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: MIT opencourseware"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_FREECODECAMP</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Freecodecamp"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_QUORA</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Quora"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_WAKATIME</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Wakatime"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_STACK_OVERFLOW</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Stack overflow"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_YOUTUBE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: YouTube"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_LEETCODE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: leetcode"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_SOUNDCLOUD</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Soundcloud"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_HACKER_NEWS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: hacker news"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_KHAN_ACADEMY</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Khan academy"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_ALFRED_FORUM</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Alfred forum"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_KM_FORUM</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: KM forum"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_GITHUB_ASSIGNED_ISSUES</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Github - assigned issues"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_REDDIT</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Reddit"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_GITHUB_NOTIFICATIONS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Github - notifications"
end tell
'
</url>
</vkopenurldef>

<!-- Timer def-->
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_TIMER_10</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "timer" in workflow "carlosnz.eggtimer2" with argument "new 10 Reminder"
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_TIMER_120</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "timer" in workflow "carlosnz.eggtimer2" with argument "new 120 Reminder"
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_TIMER_120</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "timer" in workflow "carlosnz.eggtimer2" with argument "new 120 Reminder"
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_TIMER_60</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "timer" in workflow "carlosnz.eggtimer2" with argument "new 60 Reminder"
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_TIMER_20</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "timer" in workflow "carlosnz.eggtimer2" with argument "new 20 Reminder"
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_TIMER_30</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "timer" in workflow "carlosnz.eggtimer2" with argument "new 30 Reminder"
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_TIMER_40</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "timer" in workflow "carlosnz.eggtimer2" with argument "new 40 Reminder"
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_TIMER_50</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "timer" in workflow "carlosnz.eggtimer2" with argument "new 50 Reminder"
'
</url>
</vkopenurldef>

<!-- KM def-->
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_SCREENSHOT_TO_INBOX</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: screenshot to Pixave Inbox"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_NEWS_ALL</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: open news (all)"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_NEWS_BREAK</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: open news (break)"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_ADD_SAFARI_LINK_TO_SELECTED_TEXT_MARKDOWN</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: add safari link to selected text (markdown)"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_ITERM_TAB_2</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: open 2nd iTerm tab"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_IN_CLIPBOARD_IN_SAFARI</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: open URL in clipboard in Safari"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_NEW_SHIP_ISSUE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: new Ship issue"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_SEARCH_ALL_FILES_ALFRED</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: search all files alfred"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_LOWERCASE_AND_DASH_SEPARATE_TEXT</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: lowercase and dash separate text"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_STOP_ALL_MACROS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: stop all macros"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_2DO_CURRENT_URL_AS_NOTE_WATCH</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: 2Do with current url as note - watch"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_EDIT_GIT_FUNCTIONS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "edit: git functions"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_EDIT_ASK_CREATE_SHARE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "edit: ask create share"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_EDIT_WEB_SEARCHES</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "edit: web searches"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_EDIT_ALIASES_FILE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "edit: aliases"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_EDIT_KARABINER_CONFIG</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "edit: karabiner"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_EDIT_VIMRC_CONFIG</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "edit: vimrc"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_GOTO_KM_GROUP_OF_APP</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: goto km group of the app from picklist"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_2DO_CURRENT_URL_AS_NOTE_LEARN</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: 2Do with current url as note - learn"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_FOCUS_90_MIN</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: focus for 90 min"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_FOCUS_30_MIN</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: focus for 30 min"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_SEND_TWEET_WITH_SAFARI_URL</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: send tweet with current URL"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_NEW_TWEET_WITH_SAFARI_URL</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: new tweet with current URL"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_NEW_2DO_QUICK_TASK</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: make 2do quick task"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_CREATE_SNIPPETSLAB_SNIPPET_FROM_SELECTION</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: create snippetslab snippet from selection"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_LAST_N_MACROS_EXECUTED</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: list last n macros executed"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_INSERT_BACKQUOTES_AND_CLIP</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: insert `` and clipboard"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_ITERM_TAB_1</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: open 1st iTerm tab"
end tell
'
</url>
</vkopenurldef>

<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_F1</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "f1"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_F2</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "f2"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_F3</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "f3"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_F4</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "f4"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_F5</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "f5"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_F6</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "f6"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_F7</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "f7"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_DUCKDUCKGO_CLIPBOARD</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: duckduckgo clipboard"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_GOOGLE_CLIPBOARD</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: google clipboard"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_GET_CURRENT_CHROME_URL</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: get current url from chrome"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_COMMIT_WIKI</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: commit my wiki"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_CMD_CLICK</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: cmd click"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_MOVE_MOUSE_TOP_MIDDLE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: mouse pointer top middle"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_MOVE_MOUSE_TO_CENTRE_SCREEN</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: centre mouse pointer"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_CLONE_REPO_TO_CLONES_AND_OPEN_WITH_VS_CODE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: clone repo to ~/src/clones and open with VS Code"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_FORK_REPO_TO_FORKS_AND_OPEN_WITH_VS_CODE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: fork repo to ~/src/forks and open with VS Code"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_CLONE_REPO_TO_CLONES_AND_OPEN_WITH_SUBLIME</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: clone repo to ~/src/clones and open with Sublime"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_PASS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "per: pass"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_TITLE_CASE_TEXT</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: title case selected text"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_MANIPULATE_CLIPBOARD</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: manipulate clipboard"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_LOWERCASE_SELECTED_TEXT</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: lowercase selected text"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_FOCUS_60_MIN</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: focus for 60 min"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_FOCUS_120_MIN</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: focus for 120 min"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_CLONE_REPO_TO_CLONES</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: clone repo to ~/src/clones"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_IN_SAFARI</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: open url in safari"
end tell
'
</url>
</vkopenurldef>


<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_2DO_CURRENT_URL_AS_NOTE_READ</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: 2Do with current url as note - read"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_2DO_CURRENT_URL_AS_NOTE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: 2Do with current url as note"
end tell
'
</url>
</vkopenurldef>

<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_GODOC</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "w: Godoc"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_SELECTED_TEXT_TO_ANKI</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: selected text to anki"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_DECREASE_YOUTUBE_PLAYBACK</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: decrease playback on youtube"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_INCREASE_YOUTUBE_PLAYBACK</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: increase playback on youtube"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_SCREENSHOT_TO_DAYONE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: screenshot to day one"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_PASTE_SELECTED_TEXT_IN_ITERM</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: run command in iterm"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_SCREENSHOT_MINDNODE_TABBED</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: screenshot to mindnode tabbed"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_PASTE_SELECTED_TEXT_IN_PREV_APP</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: paste selected text in previous application"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_DICTIONARY_SELECTED_TEXT_TO_MINDNODE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "dictionary: selected text to mindnode"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_SCREENSHOT_TO_ANKI</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: screenshot to anki"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_SELECTED_TEXT_TO_MINDNODE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: selected text to mindnode"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_NEW_MINDNODE_FILE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: new mindnode file"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_NEW_SKETCH_FILE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: new sketch file"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_CREATE_NEW_CONTACT</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: create new contact"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_EDIT_KEYBOARD_SHORTCUTS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: edit keyboard shortcuts"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_CUT_CURRENT_LINE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: cut current line"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_GET_CURRENT_URL_FROM_SAFARI</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: get current url from safari"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_TEST</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "test"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_LIKE_AND_SAVE_CURRENT_UNSPLASH_WALLPAPER</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: like and save current unsplash wallpaper"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_NEW_SNIPPETSLAB_SNIPPET</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: new snippetslab snippet"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_ITERM_SNIPPET_FROM_SELECTION</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "iterm: snippet from selection"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_PRIMARY_NEWS_PRESET</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: open primary news preset"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_UPPERCASE_SELECTED_TEXT</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: uppercase selected text"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_CUT_WORD_BEFORE_CURSOR</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: cut word before cursor"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_HIGHLIGHT_CURRENT_LINE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: highlight current line"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_MAKE_MARKDOWN_LINK_FROM_SELECTION</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: make markdown link from selection"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_MAKE_MARKDOWN_LINK_FROM_SELECTION_AND_ADD_LINK</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: make markdown link from selection {link}"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_SCREENSHOT_TO_MINDNODE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: screenshot to mindnode"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_CUT_CURRENT_WORD</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: cut current word"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_MATCH_SYMBOLS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: match symbols"
end tell
'
</url>
</vkopenurldef>

<!-- km lists open -->
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_LIST_WEBSITES</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "list: websites"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_LIST_PROGRAMMING_LANGUAGES</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "list: programming languages"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_LIST_QUOTES</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "list: quotes"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_LIST_RESEARCH_PAPERS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "list: research papers"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_LIST_COURSES</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "list: courses"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_LIST_BOOKS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "list: books"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_LIST_COMMAND_LINE_TOOLS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "list: command line tools"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_LIST_BLOGS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "list: blogs"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_LIST_REDDIT</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "list: reddit"
end tell
'
</url>
</vkopenurldef>

<!-- KM wiki -->
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_WIKI_RULES</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "wiki: rules"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_WIKI_SUMMARY</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "wiki: summary"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_WIKI_LESSONS_LEARNED</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "wiki: lessons learned"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_WIKI_MY_WORKFLOW</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "wiki: my workflow"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_WIKI_PROCESSES</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "wiki: processes"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_WIKI_MY_GITHUB</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "wiki: my github"
end tell
'
</url>
</vkopenurldef>

<!-- KM test files -->
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_TEST_JS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "test: js"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_TEST_TYPESCRIPT</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "test: typescript"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_TEST_WEB</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "test: web"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_TEST_HASKELL</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "test: haskell"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_TEST_PYTHON</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "test: python"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_EDIT_TEST_GO</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "test: go"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_TEST_BASH</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "test: bash"
end tell
'
</url>
</vkopenurldef>

<!-- KM MindNode maps -->
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_MAP_THINK</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "map: think"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_MAP_KNOWLEDGE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "map: knowledge"
end tell
'
</url>
</vkopenurldef>

<!-- KM edit files -->
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_EDIT_LIKES</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "edit: likes"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_EDIT_DOTBOT</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "edit: dotbot"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_EDIT_FZF_FUNCTIONS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "edit: fzf functions"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_EDIT_NIX_CONFIGURATION</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "edit: configuration.nix"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_EDIT_ABOUT</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "edit: about"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_EDIT_DOTFILES_README</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "edit: dotfiles readme"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_EDIT_ZSH_BINDINGS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "edit: zsh bindings"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_EDIT_PROJECTS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "edit: projects"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_EDIT_MY_MACOS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "edit: my macOS"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_EDIT_ZSH_ENV</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "edit: env.zsh"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_EDIT_GITCONFIG</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "edit: gitconfig"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_EDIT_ZSH_FUNCTIONS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "edit: zsh functions"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_EDIT_ZSHRC</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "edit: zshrc"
end tell
'
</url>
</vkopenurldef>

<!-- km go def-->
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_GO_PREFILL_COMMENT_OF_FUNCTION</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "prefill comment of function"
end tell
'
</url>
</vkopenurldef>

<!-- KM Karabiner profiles -->
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_KARABINER_PROFILE_PYTHON</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "kar: python profile"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_KARABINER_PROFILE_GO</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "kar: go profile"
end tell
'
</url>
</vkopenurldef>

<!-- KM Paths def -->
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_PATH_HOME</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "path: home"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_PATH_APPLICATIONS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "path: applications"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_PATH_ROOT</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "path: root"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_PATH_TEST</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "path: test"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_PATH_XCODE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "path: xcode"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_PATH_GO_SRC_GITHUB</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "path: go src github"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_PATH_APP</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "path: app"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_PATH_UNI</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "path: uni"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_PATH_PDFS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "path: pdf"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_PATH_PAPERS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "path: papers"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_PATH_IDEAS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "path: ideas"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_PATH_LEARN</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "path: learn"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_PATH_DROPBOX</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "path: dropbox"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_PATH_GOPATH</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "path: gopath"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_PATH_DOTFILES</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "path: dotfiles"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_PATH_APPLICATION_SUPPORT</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "path: application support"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_PATH_BOOKS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "path: books"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_PATH_DOCUMENTS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "path: documents"
end tell
'
</url>
</vkopenurldef>

<!-- km personal def-->
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_ADD_CLIPBOARD_AS_ACTIVE_TODO</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: add clipboard as todo"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_ADD_SELECTED_TEXT_AS_ACTIVE_TODO</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "g: add selected text as todo"
end tell
'
</url>
</vkopenurldef>

<!-- km app def -->
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_ITUNES</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: itunes"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_KARABINER_ELEMENTS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: karabiner elements"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_SEQUEL_PRO</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Sequel Pro"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_BREATHING_ZONE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: breathing zone"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_KEYCHAIN_ACCESS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: keychain access"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_KEYNOTE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: keynote"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_ACTUAL</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: actual"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_POSTICO</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: postico"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_NUMBERS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Numbers"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_HAMMERSPOON</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: hammerspoon"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_TRELLO</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Trello"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_PHOTOS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Photos"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_MAGIC_NUMBER</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Magic number"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_MARKED</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Marked"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_CONSOLE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Console"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_OBS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: OBS"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_PREVIEW</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Preview"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_PAGES</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Pages"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_MAPS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Maps"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_CHARLES</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Charles"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_CHROME</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Chrome"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_TEXTBAR</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Textbar"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_IINA</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: IINA"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_FIREFOX_DEV</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Firefox dev"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_FIREFOX</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Firefox"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_TRANSMISSION</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Transmission"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_URL_SCREENFLOW</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Screenflow"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_TRANSMIT</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Transmit"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_UI_BROWSER</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: UI browser"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_PIXELMATOR</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Pixelmator"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_SHIP</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Ship"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_SONIC_PI</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Sonic pi"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_POSTGRES</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Postgres"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_SAFARI_TECHNOLOGY_PREVIEW</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Safari technology preview"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_SCRIPT_DEBUGGER</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Script debugger"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_SCRIPT_EDITOR</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Script editor"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_DICTIONARY</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Dictionary"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_ANKI</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Anki"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_HAZEL</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Hazel"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_PAPRIKA_RECIPE_MANAGER</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Paprika recipe manager"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_BRAINWAVE_STUDIO</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Brainwave studio"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_ACTIVITY_MONITOR</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Activity monitor"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_FLUME</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Flume"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_SUBLIME_TEXT</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Sublime text"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_SYSTEM_PREFERENCES</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: System preferences"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_MUSIXMATCH_LYRICS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: MusiXmatch lyrics"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_TIMING</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Timing"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_GITTER</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Gitter"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_1PASSWORD</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: 1password"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_LITTLE_SNITCH_CONFIGURATION</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Little snitch configuration"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_NOTES</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Notes"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_SIMULATOR</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Simulator"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_IBOOKS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: iBooks"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_KARABINER_PREFERENCES</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Karabiner preferences"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_DISCORD</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Discord"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_SKETCH</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Sketch"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_TOWER</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Tower"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_PAW</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Paw"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_SOULVER</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Soulver"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_REEDER</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Reeder"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_FINDER</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Finder"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_CONTACTS</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Contacts"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_SPOTIFY</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Spotify"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_FANTASTICAL</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Fantastical"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_BETTERTOUCHTOOL</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: BetterTouchTool"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_AIRMAIL</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Airmail"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_SAFARI</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Safari"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_ULYSSES</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Ulysses"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_MINDNODE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: MindNode"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_XCODE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Xcode"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_ITERM</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: iTerm"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_VS_CODE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: VS Code"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_ITERM</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: iterm"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_TELEGRAM</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: telegram"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_2DO</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: 2Do"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_PDF_EXPERT</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: PDF Expert"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_TEXTUAL</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Textual"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_SNIPPETSLAB</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Snippetslab"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_KEYBOARD_MAESTRO</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Keyboard maestro"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_ALFRED_PREFERENCES</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Alfred preferences"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_AIRMAIL</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Airmail"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_ULYSSES</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Ulysses"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_DAY_ONE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Day One"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_TWEETBOT</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Tweetbot"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_PIXAVE</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "open: Pixave"
end tell
'
</url>
</vkopenurldef>

<!-- HS def -->
<vkopenurldef>
<background/>
<name>KeyCode::VK_OPEN_URL_HAMMERSPOON_SHOW_TODO</name>
<url>hammerspoon://showTodoTask</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_HAMMERSPOON_OPEN_CONSOLE</name>
<url>hammerspoon://openConsole</url>
</vkopenurldef>
<vkopenurldef>
<background/>
<name>KeyCode::VK_OPEN_URL_HAMMERSPOON_SHOW_ACTIVE_WINDOWS</name>
<url>hammerspoon://showActiveWindows</url>
</vkopenurldef>
<vkopenurldef>
<background/>
<name>KeyCode::VK_OPEN_URL_HAMMERSPOON_SHOW_CLIPBOARD_CONTENT</name>
<url>hammerspoon://showClipBoardContent</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_HAMMERSPOON_VISUALLY_CIRCLE_MOUSE</name>
<url>hammerspoon://visuallyCircleMouse</url>
</vkopenurldef>
<vkopenurldef>
<background/>
<name>KeyCode::VK_OPEN_URL_HAMMERSPOON_SHOW_TIME</name>
<url>hammerspoon://showTime</url>
</vkopenurldef>
<vkopenurldef>
<background/>
<name>KeyCode::VK_OPEN_URL_HAMMERSPOON_RELOAD_CONFIG</name>
<url>hammerspoon://reloadConfig</url>
</vkopenurldef>
<vkopenurldef>
<background/>
<name>KeyCode::VK_OPEN_URL_HAMMERSPOON_TESTER</name>
<url>hammerspoon://tester</url>
</vkopenurldef>
<vkopenurldef>
<background/>
<name>KeyCode::VK_OPEN_URL_HAMMERSPOON_CYCLE_WINDOWS_NEXT</name>
<url>hammerspoon://cycleWindowsNext</url>
</vkopenurldef>
<vkopenurldef>
<background/>
<name>KeyCode::VK_OPEN_URL_HAMMERSPOON_CYCLE_WINDOWS_PREVIOUS</name>
<url>hammerspoon://cycleWindowsPrevious</url>
</vkopenurldef>

<!-- KM chrome-->
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_CHROME_URL_CODESANDBOX</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "c: Codesandbox"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_CHROME_URL_SOURCEGRAPH</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "c: Sourcegraph"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_CHROME_URL_GITHUB</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "c: GitHub"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_CHROME_URL_FACEBOOK</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "c: Facebook"
end tell
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_KM_OPEN_CHROME_URL_LOCALHOST</name>
<url type="shell">
osascript -e '
tell application "Keyboard Maestro Engine"
do script "c: localhost"
end tell
'
</url>
</vkopenurldef>

<!-- Alf def -->
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_GISTS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "gists" in workflow "nikivi.search-the-web" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_IMGUR_SCREENSHOT_AND_SAVE_INBOX</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "screen and save" in workflow "com.vitorgalvao.alfred.webscreenshot" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_FORKS_DIR_WATCH</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "forks" in workflow "com.vitorgalvao.alfred.directories" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_GOOGLE_TRANSLATE</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "search" in workflow "com.nikerino.polyglot" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_GOODREADS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "search" in workflow "com.wesbaker.alfred.goodreads" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_LEARN_ANYTHING_LISTS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "lists" in workflow "nikivi.learn-anything" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_DRIBBLE</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "dribble" in workflow "nikivi.search-the-web" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_OPEN_LOCALHOST</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "localhost" in workflow "nikivi.local.host" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SIMPLE_WIKI</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "simple" in workflow "net.deanishe.alfred-searchio.old" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_LOBSTERS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "lobsters" in workflow "nikivi.search-the-web" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_EMOJI_SEARCH</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "emoji" in workflow "com.github.jsumners.alfred-emoji" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_AWESOME_LISTS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "awesome" in workflow "nikivi.awesome-lists" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_LEARN_ANYTHING</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "learn" in workflow "nikivi.learn-anything" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_REMOVE_REMINDER_TIMER</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "remove reminder" in workflow "carlosnz.eggtimer2" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_STACK_OVERFLOW_SEARCH_SUGGESTIONS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "stack" in workflow "net.deanishe.alfred-stackoverflow" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_MDN</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "search" in workflow "com.klaascuvelier.mdn" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_GITHUB_REPOS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "search" in workflow "com.a.alfred-github" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_ALFRED_KEYWORDS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "search" in workflow "com.pochemuto.alfred.workflow.AlfredHelp" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_CONVERT</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "convert" in workflow "net.deanishe.alfred-convert" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_GET_BITLY</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "bitly" in workflow "com.patrickkahl.bitly" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_MY_TOPS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "spot_mini" in workflow "com.vdesabou.spotify.mini.player" with argument "Your Tops▹"
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_SEARCH_ALBUMS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "spot_mini" in workflow "com.vdesabou.spotify.mini.player" with argument "Album▹"
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_SEARCH_ARTISTS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "spot_mini" in workflow "com.vdesabou.spotify.mini.player" with argument "Artist▹"
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_PLAY_QUEUE</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "show_play_queue" in workflow "com.vdesabou.spotify.mini.player" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_BROWSE</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "show_browse" in workflow "com.vdesabou.spotify.mini.player" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_HISTORY</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "show_recent_tracks" in workflow "com.vdesabou.spotify.mini.player" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_MIND_WIKI</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "wiki" in workflow "nikivi.mind" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_LIBRARY</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "library" in workflow "nikivi.search.files" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_ALFRED_DOC</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "alfred doc" in workflow "com.vitorgalvao.alfred.alfredmoderation" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_GOOGLE_LUCKY</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "lucky" in workflow "net.deanishe.alfred-searchio.old" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_UNITS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "units" in workflow "units.3.4.designandsuch.com" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_CHROME_PROFILES</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "chrome profiles" in workflow "com.mdreizin.chrome.bookmarks" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_CHROME_HISTORY</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "history" in workflow "com.peterschmalfeldt.ChromeHistory" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_WATCH_TRASH</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "trash" in workflow "com.vitorgalvao.alfred.directories" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SOULVER</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "soulver" in workflow "nikivi.search.files" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_ULYSSES_SHEETS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "ulysses sheets" in workflow "nikivi.search.files" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_TWITTER</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "twitter" in workflow "nikivi.search-the-web" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_FILTER_KNOWLEDGE_WIKI_FOLDERS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "wiki folders" in workflow "nikivi.a.manage.wiki" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARH_MARKDOWN_WIKI</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "wiki" in workflow "nikivi.a.manage.wiki" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_WATCH_DROPBOX_SHARES</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "dropbox" in workflow "nikivi.dropbox.upload" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_MONTHS_NUMBERS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "months" in workflow "nikivi.month.numbers" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_TIME</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "birthday" in workflow "nikivi.birthday" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_PAGES</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "pages" in workflow "nikivi.search.files" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_AFRED_GET_APP_VERSION</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "getVersion" in workflow "com.vitorgalvao.alfred.appversion" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_ITERM_TTY</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "tty" in workflow "net.isometry.alfred.tty" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_GUTENBERG</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "gutenberg" in workflow "net.deanishe.alfred-index-demo" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_GO_TO_SUB</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "goto" in workflow "nikivi.go.to.sub" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_APPLE_MAPS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "searchMaps" in workflow "search.apple.maps" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_CRYPTO_TRACK</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "track" in workflow "com.cryprotracker" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_MEDIUM</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "medium" in workflow "nikivi.search-the-web" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_HACKER_NEWS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "HN" in workflow "nikivi.search-the-web" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_VIEW_SCREENSHOTS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "taken" in workflow "com.vitorgalvao.alfred.webscreenshot" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_STACK</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "stack" in workflow "nikivi.search-the-web" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_DISPLAY_SONG</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "display_current_track_notification" in workflow "com.vdesabou.spotify.mini.player" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_SEARCH_ONLINE</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "show_search_online" in workflow "com.vdesabou.spotify.mini.player" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_QUORA</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "quora" in workflow "nikivi.search-the-web" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SCREENSHOT_TO_GOOGLE</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "similar" in workflow "net.deanishe.alfred-google-similar-images" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_PDF_CONTENT</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "PDF" in workflow "nikivi.search-for-content" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_WIFI_CHECK</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "check" in workflow "nikivi.wifi.workflow" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_WEB_SEARCHES</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "web searches" in workflow "nikivi.web.searches" with argument ""
'
</url>
</vkopenurldef>

<!-- Alf mind def-->
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_MIND_QUERIES</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/recent.json"
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_MIND_PROFILES</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/profiles.json"
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_MIND_REDDIT</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/reddit.json"
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_MIND_ARTICLES</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/articles.json"
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_MIND_RESEARCH_PAPERS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/research-papers.json"
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_MIND_STACK</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/stack.json"
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_MIND_SLACK</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/slack.json"
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_MIND_BOOKS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/books.json"
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_MIND_BLOGS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/blogs.json"
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_MIND_WEB</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "open" in workflow "nikivi.mind" with argument "lists/web.json"
'
</url>
</vkopenurldef>

<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SAFARI_FOLDERS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "all-folders" in workflow "net.deanishe.alfred.safari" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_TRANSMIT</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "transmit" in workflow "sher.transmit" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_UPDATE_MIND</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "update" in workflow "nikivi.mind" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_SHOW_QUEUE</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "playQueue" in workflow "com.vdesabou.spotify.mini.player" with argument "✧Play Queue▹"
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_SEARCH_CURRENT_SONG</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "web_search_current_track" in workflow "com.vdesabou.spotify.mini.player" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_OPEN_LYRICS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "lyrics" in workflow "com.vdesabou.spotify.mini.player" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_GIT_REPOS_UPDATE</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "gitUpdate" in workflow "net.deanishe.alfred-git-repos" with argument ""
'
</url>
</vkopenurldef>


<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_CLONES_DIR_WATCH</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "clones" in workflow "com.vitorgalvao.alfred.directories" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_REMOVE_SONG_FROM_PLAYLIST</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "remove_current_track_from" in workflow "com.vdesabou.spotify.mini.player" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_WATCH_SPOTIFY_LIKES</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "show_alfred_playlist" in workflow "com.vdesabou.spotify.mini.player" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_ADD_SONG_SPOTIFY</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "add_current_track_to_alfred_playlist_or_your_music" in workflow "com.vdesabou.spotify.mini.player" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_IMGUR_SCREENSHOT</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "screen" in workflow "com.vitorgalvao.alfred.webscreenshot" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_DASH_PROFILE_SWITCH</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "switch" in workflow "nikivi.dash-profiles" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_GIT_REPOS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "git" in workflow "net.deanishe.alfred-git-repos" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_PINBOARD</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "pinboard" in workflow "com.vitorgalvao.alfred.hackerboard" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_HACKER_NEWS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "search" in workflow "com.vitorgalvao.alfred.hackerboard" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SKETCH</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "sketch" in workflow "nikivi.search.files" with argument ""
'
</url>
</vkopenurldef>


<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_OPEN_DOCUMENTATION</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "d2" in workflow "com.nirelbaz.d2" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_OPEN_LEARNING_MINDMAPS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "learn" in workflow "nikivi.learn-anything" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_BING</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "bing" in workflow "net.deanishe.alfred-searchio.old" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_DESKTOP_CLEAN</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "trash desktop" in workflow "nikivi.clean.folders" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SAFARI_BOOKMARKS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "bookmarks" in workflow "net.deanishe.alfred.safari" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SUBREDDITS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "search" in workflow "net.deanishe.alfred-reddit" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_DESKTOP_DIR_WATCH</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "desktop" in workflow "com.vitorgalvao.alfred.directories" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SYNONYMS_SEARCH</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "synonym" in workflow "com.vitorgalvao.alfred.synant" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_WOLFRAM_ALPHA</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "wolfram" in workflow "nikivi.search-the-web" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_CREATE_ARTIST_RADIO</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "artist_radio" in workflow "com.vdesabou.spotify.mini.player" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_CREATE_SONG_RADIO</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "song_radio" in workflow "com.vdesabou.spotify.mini.player" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_PLAY_ARTIST_OF_SONG</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "playArtistOfSong" in workflow "com.vdesabou.spotify.mini.player" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_PLAY_ALBUM_OF_CURRENT_SONG</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "playAlbumOfSong" in workflow "com.vdesabou.spotify.mini.player" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_PLAY_MY_LIKES_PLAYLIST</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "play_alfred_playlist" in workflow "com.vdesabou.spotify.mini.player" with argument ""

'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_ADD_SONG_TO_PLAYLIST</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "add_current_track_to" in workflow "com.vdesabou.spotify.mini.player" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_UPDATE_GITHUB_INDEX</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "update" in workflow "me.lachlan.githubjump" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_SEARCH_TEX_FILES</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "tex" in workflow "nikivi.search.files" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_COLOUR_PICKER</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "feedback" in workflow "tylereich.colors" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_ACTIVATE_FOCUS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "focus" in workflow "nikivi.block.websites" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SSH</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "ssh" in workflow "net.deanishe.alfred-ssh" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_PLAYGROUNDS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "playgrounds" in workflow "nikivi.search.files" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_TIMER_VIEW</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "view" in workflow "carlosnz.eggtimer2" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_TIMER_START</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "start" in workflow "carlosnz.eggtimer2" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_GODOC</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "godoc" in workflow "nikivi.search-the-web" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_MINDNODE_CONTENT</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "mindnode" in workflow "nikivi.search-for-content" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_NEW_IOS_PLAYGROUND</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "iOS" in workflow "com.chrisbuchholz.new-xcode-playground" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_PODS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "pod" in workflow "ben.pod" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_DASH</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "search" in workflow "com.nikivi.own.dash" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_YANDEX_SEARCH</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "yandex" in workflow "net.deanishe.alfred-searchio.old" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_LAYOUT_MANAGER</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "layout" in workflow "de.leanovate.alfred.layout" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_PROCESS_CONTROL</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "search" in workflow "com.vitorgalvao.alfred.processcontrol" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_CSS_COOKBOOK</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "cssCookbook" in workflow "com.bitbazar.lcc" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_HTTP_CODES</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "http" in workflow "fred.liang.status.codes" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_ABOUT_THIS_MAC</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "about" in workflow "yeraze.AboutThisMac.v1.3" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_BATTERY</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "battery" in workflow "com.benzi.a2w.battery" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_GITHUB_GISTS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "gists" in workflow "com.danielecook.gist" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_EXPLAIN_SHELL</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "explain" in workflow "nikivi.search-the-web" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_LOREM_IPSUM</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "loremIpsum" in workflow "jeremy.lorem" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_IMDB_SEARCH</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "imdbSearch" in workflow "alfredimdbsuggest" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_GIPHY</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "giphySearch" in workflow "com.arbitrarydefinitions.giphy" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_GEOLOCATION</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "geo" in workflow "com.ryanparman.workflow.geo" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_DATE_CALCULATOR</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "date" in workflow "de.leenno.datecalculator" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_FONT_AWESOME</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "font" in workflow "com.ruedap.font-awesome" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_GOOGLE_DRIVE</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "search" in workflow "com.drive.azai91" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_DISPLAY_BRIGHTNESS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "display" in workflow "com.fniephaus.brightness" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_PLAYLISTS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "show_playlists" in workflow "com.vdesabou.spotify.mini.player" with argument "test"
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_GITHUB</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "github" in workflow "nikivi.search-the-web" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_INDEXED_GITHUB</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "github" in workflow "me.lachlan.githubjump" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SHOW_CALENDAR</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "calendar" in workflow "zmin.calendar" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_CONTACTS_TEXT</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "contacts" in workflow "nikivi.search-for-content" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_TIMEZONES</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "search" in workflow "carlosnz.timezones" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_CAN_I_USE</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "canIUse" in workflow "com.farrell.caniuse.alfredworkflow" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_ALFRED_WORKFLOWS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "search" in workflow "org.jeef.workflowdirectory" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_PAW_FILES</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "paw" in workflow "nikivi.search.files" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_XCODE</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "search" in workflow "com.sindresorhus.xcode" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_GOOGLE_IMAGES</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "google images" in workflow "net.deanishe.alfred-searchio.old" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_HASTEBIN</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "hastebin" in workflow "co.jmes.hastebin" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SYMBOLS_SEARCH</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "symbols" in workflow "pw.symbols-search" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_UNINSTALL_WITH_CLEANMYMAC</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "uninstall" in workflow "fradser.uninstall.cleanmymac3" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<background/>
<name>KeyCode::VK_OPEN_URL_ALFRED_RELOAD_KARABINER_XML</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "reload" in workflow "nikivi.karabiner" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_CLEAN_FOLDERS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "clean" in workflow "nikivi.clean.folders" with argument ""
'
</url>
</vkopenurldef>


<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_DICTIONARY_SEARCH</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "search" in workflow "nikivi.dictionary.lookup" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_DISMISS_NOTIFICATIONS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "dismiss" in workflow "shh" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_FORCE_EMPTY_TRASH</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "empty" in workflow "com.renegaed.force-empty-trash" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_REDDIT</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "reddit" in workflow "nikivi.search-the-web" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_ALFRED_FORUM</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "searchAlfredForum" in workflow "nikivi.search-the-web" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_IDOPE</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "idope" in workflow "nikivi.search-the-web" with argument ""
'
</url>
</vkopenurldef>


<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SNIPPETSLAB_SEARCH</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "search" in workflow "com.renfei.SnippetsLab.AlfredWorkflow" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_RECENT_DOWNLOADS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "downloads" in workflow "recentdownloads.ddjfreedom" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_CURRENT_TRACK</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "show_current_track" in workflow "com.vdesabou.spotify.mini.player" with argument "test"
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_MAIN</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "spot_mini" in workflow "com.vdesabou.spotify.mini.player" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_KM_MACROS_SEARCH</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "run" in workflow "iansinnott.keyboardmaestro" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_NPM_SEARCH</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "npm" in workflow "com.sindresorhus.npms" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_ULYSSES_GROUPS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "ulysses groups" in workflow "nikivi.search.files" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SAFARI_HISTORY</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "history" in workflow "com.alfredapp.andrew.safari" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_VIEW_SAFARI_TABS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "tabs" in workflow "net.deanishe.alfred.safari" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_WEATHER_TODAY</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "start" in workflow "com.jason0x43.alfred-weather" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_NEW_TODO</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "new" in workflow "nikivi.create.task" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_ASK_CREATE_SHARE</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "ask" in workflow "nikivi.ask.create.share" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_MINDNODE</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "mindnode" in workflow "nikivi.search.files" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_PDF</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "PDF" in workflow "nikivi.search.files" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_FOLDERS</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "search" in workflow "nikivi.search-folders" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_GITHUB</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "github" in workflow "de.gh01.alfred.github" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_MENUBAR_SEARCH</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "search" in workflow "com.tedwise.menubarsearch" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_YOUTUBE_SEARCH</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "youtube" in workflow "net.deanishe.alfred-searchio.old" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_DUCKDUCKGO_SEARCH</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "duckduckgo" in workflow "net.deanishe.alfred-searchio.old" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_WIKI_SIMPLE_SEARCH</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "wiki simple" in workflow "net.deanishe.alfred-searchio.old" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_AMAZON_SEARCH</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "amazon" in workflow "net.deanishe.alfred-searchio.old" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_WIKI_SEARCH</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "wiki" in workflow "net.deanishe.alfred-searchio.old" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_GOOGLE_MAPS_SEARCH</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "google maps" in workflow "nikivi.search-the-web" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_RESTART_WIFI</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "restart" in workflow "nikivi.wifi.workflow" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_TOGGLE_WIFI</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "toggle" in workflow "nikivi.wifi.workflow" with argument ""
'
</url>
</vkopenurldef>
<vkopenurldef>
<name>KeyCode::VK_OPEN_URL_ALFRED_SEARCH_GOOGLE</name>
<url type="shell">
osascript -e '
tell application "Alfred 3" to run trigger "google" in workflow "net.deanishe.alfred-searchio.old" with argument ""
'
</url>
</vkopenurldef>

<!-- language definitions -->
<inputsourcedef>
<name>US</name>
<inputsourceid_prefix>com.apple.keylayout.US</inputsourceid_prefix>
</inputsourcedef>

<inputsourcedef>
<name>RU</name>
<inputsourceid_prefix>com.apple.keylayout.RussianWin</inputsourceid_prefix>
</inputsourcedef>

<item>
<name>gen: put {} () [] to a better place</name>
<identifier>private.brackets_around</identifier>
<inputsource_not>RU</inputsource_not>
<autogen>
__KeyToKey__
KeyCode::BACKSLASH, ModifierFlag::NONE,
KeyCode::BRACKET_RIGHT, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::0, ModifierFlag::SHIFT_L,
KeyCode::BACKQUOTE, ModifierFlag::NONE,
</autogen>
<autogen>
__KeyToKey__
KeyCode::MINUS, ModifierFlag::SHIFT_L,
KeyCode::BACKSLASH, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::BRACKET_RIGHT, ModifierFlag::NONE,
KeyCode::0, ModifierFlag::SHIFT_L
</autogen>
</item>

<item>
<name>gen: change colon to semicolon</name>
<identifier>private.colon_to_semicolon</identifier>
<inputsource_not>RU</inputsource_not>
<autogen>
__KeyToKey__
KeyCode::SEMICOLON, ModifierFlag::SHIFT_L,
KeyCode::SEMICOLON,
</autogen>
</item>

<item>
<name>gen: sticky semicolon - shift key</name>
<identifier>private.launcher_mode_open_apps_v30</identifier>
<inputsource_only>US</inputsource_only>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
<!-- _KeyOverlaidModifier__ take 3 parameters -->
<!-- 1st parameter define which key to trigger -->
KeyCode::SEMICOLON,
<!--
Use notsave.launcher_mode_v2 in order to be higher priority.
Use ModifierFlag::MY_LAUNCHER_MODE for __DropAllKeys__.
-->
<!-- 2nd parameter will run when held down -->@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v30, ModifierFlag::MY_LAUNCHER_MODE,
@end
<!-- 3rd parameter will run when tap, we did the key swap here -->@begin
KeyCode::SEMICOLON, ModifierFlag::SHIFT_L
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v30</identifier>

<autogen>
__BlockUntilKeyUp__
KeyCode::SEMICOLON,
</autogen>
<autogen>
__KeyToKey__
KeyCode::1,
KeyCode::1, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::2,
KeyCode::2, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::3,
KeyCode::3, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::4,
KeyCode::4, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::5,
KeyCode::5, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMAND_R,
KeyCode::F11, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMA,
KeyCode::COMMA, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMAND_L,
KeyCode::CAPSLOCK
</autogen>
<autogen>
__KeyToKey__
KeyCode::F19,
KeyCode::VK_OPEN_URL_KM_MATCH_SYMBOLS
</autogen>
<autogen>
__KeyToKey__
KeyCode::BACKQUOTE,
KeyCode::CAPSLOCK
</autogen>
<autogen>
__KeyToKey__
KeyCode::DOT,
KeyCode::DOT, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMAND_L,
KeyCode::9, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::QUOTE,
KeyCode::VK_OPEN_URL_KM_HIGHLIGHT_CURRENT_LINE
</autogen>
<autogen>
__KeyToKey__
KeyCode::Q,
KeyCode::Q, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::W,
KeyCode::W, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::E,
KeyCode::E, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::R,
KeyCode::R, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::T,
KeyCode::T, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::Y,
KeyCode::Y, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::U,
KeyCode::U, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::I,
KeyCode::I, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::O,
KeyCode::O, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::P,
KeyCode::P, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::BRACKET_LEFT,
KeyCode::BRACKET_LEFT, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::A,
KeyCode::A, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::S,
KeyCode::S, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::D,
KeyCode::D, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::F,
KeyCode::F, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::G,
KeyCode::G, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::H,
KeyCode::H, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::J,
KeyCode::J, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::K,
KeyCode::K, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::L,
KeyCode::L, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::Z,
KeyCode::Z, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::X,
KeyCode::X, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::C,
KeyCode::C, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::V,
KeyCode::V, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::B,
KeyCode::B, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::N,
KeyCode::N, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::M,
KeyCode::M, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::SLASH,
KeyCode::SLASH, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::SHIFT_L,
KeyCode::SLASH, ModifierFlag::SHIFT_L
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v71</identifier>

<autogen>
__BlockUntilKeyUp__ KeyCode::SEMICOLON,
</autogen>

<autogen>
__KeyToKey__
KeyCode::A,
KeyCode::B
</autogen>
</item>

<item>
<name>gen: hyper function semicolon key</name>
<identifier>private.hyper.function.SEMICOLON.key</identifier>
<inputsource_not>RU</inputsource_not>

<autogen>
__KeyToKey__
KeyCode::SEMICOLON, ModifierFlag::SHIFT_L,
KeyCode::SEMICOLON
</autogen>
<autogen>
__HoldingKeyToKey__
KeyCode::SEMICOLON,

<!-- short press -->@begin
KeyCode::SEMICOLON, ModifierFlag::SHIFT_L,
@end

<!-- hold -->@begin
KeyCode::SHIFT_L
@end

Option::NOREPEAT,
</autogen>
</item>

<item>
<name>gen: sticky s - essential</name>
<identifier>private.launcher_mode_open_apps_v23</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::S,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v23, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::S,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v23</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::S,
</autogen>

<autogen>
__KeyToKey__
KeyCode::SLASH,
KeyCode::T, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::I,
KeyCode::SPACE, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::P,
KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::U,
KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::O,
KeyCode::F11, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::G,
KeyCode::TAB, ModifierFlag::COMMAND_L,
<!-- Release command key to commit command-tab -->
KeyCode::COMMAND_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::W,
KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L,
KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::SEMICOLON,
KeyCode::MINUS,
KeyCode::SPACE
</autogen>
<autogen>
__KeyToKey__
KeyCode::T,
KeyCode::VK_OPEN_URL_KM_CUT_CURRENT_WORD
</autogen>
<autogen>
__KeyToKey__
KeyCode::N,
KeyCode::V, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::BRACKET_LEFT,
KeyCode::F7
</autogen>
<autogen>
__KeyToKey__
KeyCode::C,
KeyCode::DELETE, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::SHIFT_R,
KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L,
KeyCode::X, ModifierFlag::COMMAND_L,
Option::NOREPEAT,
</autogen>
<autogen>
__KeyToKey__
KeyCode::E,
KeyCode::TAB
</autogen>
<autogen>
__KeyToKey__
KeyCode::Y,
KeyCode::CURSOR_UP, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::U,
KeyCode::CURSOR_DOWN, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::U,
KeyCode::DELETE, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::QUOTE,
KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L,
KeyCode::CURSOR_RIGHT, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::SPACE,
KeyCode::SPACE
</autogen>
<autogen>
__KeyToKey__
KeyCode::DOT,
KeyCode::VK_OPEN_URL_KM_CUT_CURRENT_LINE
</autogen>
<autogen>
__KeyToKey__
KeyCode::R,
KeyCode::TAB, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::F,
KeyCode::RETURN
</autogen>
<autogen>
__KeyToKey__
KeyCode::A,
KeyCode::C, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::V,
KeyCode::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::P,
KeyCode::DELETE, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::D,
KeyCode::DELETE
</autogen>
<autogen>
__KeyToKey__
KeyCode::SHIFT_L,
KeyCode::9, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::M,
KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::V | ModifierFlag::SHIFT_L,
KeyCode::T, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::B,
KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::Z,
KeyCode::Z, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::H,
KeyCode::CURSOR_LEFT
</autogen>
<autogen>
__KeyToKey__
KeyCode::L,
KeyCode::CURSOR_RIGHT
</autogen>
<autogen>
__KeyToKey__
KeyCode::K,
KeyCode::CURSOR_UP
</autogen>
<autogen>
__KeyToKey__
KeyCode::J,
KeyCode::CURSOR_DOWN
</autogen>
</item>

<!-- sticky d for mouse movement  -->
<replacementdef>
<replacementname>MOUSE_KEYS_MODE_2_EXTRA</replacementname>
<replacementvalue>
<![CDATA[

<autogen>__KeyToKey__ KeyCode::Z, PointingButton::RIGHT,  ModifierFlag::MOUSE_KEYS_MODE_2</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMA,
KeyCode::F2, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::SEMICOLON,
KeyCode::VK_OPEN_URL_KM_NEW_SNIPPETSLAB_SNIPPET
</autogen>
<autogen>
__KeyToKey__
KeyCode::C,
KeyCode::3, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::W,
KeyCode::COMMA, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::Q,
KeyCode::COMMA, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::E,
KeyCode::VK_OPEN_URL_KM_MOVE_MOUSE_TOP_MIDDLE
</autogen>
<autogen>
__KeyToKey__
KeyCode::BACKQUOTE,
KeyCode::1, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::F19,
KeyCode::VK_OPEN_URL_KM_SCREENSHOT_TO_INBOX
</autogen>
<autogen>
__KeyToKey__
KeyCode::G,
KeyCode::VK_OPEN_URL_SHELL_warp_mouse_cursor_position_front_window_center
</autogen>
<autogen>
__KeyToKey__
KeyCode::SHIFT_L,
KeyCode::9, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::O,
KeyCode::EQUAL, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::BACKQUOTE,
KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::SPACE,
KeyCode::M, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::I,
KeyCode::MINUS, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::A,
KeyCode::F11, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::M,
KeyCode::VK_OPEN_URL_KM_OPEN_CHROME_URL_LOCALHOST
</autogen>
<autogen>
__KeyToKey__
KeyCode::DOT,
KeyCode::F1, ModifierFlag::COMMAND_L
</autogen>

]]>
</replacementvalue>
</replacementdef>

<modifierdef>MY_LAUNCHER_MODE</modifierdef>

<!-- sticky o  -->
<replacementdef>
<replacementname>LAUNCHER_MODE_V2_EXTRA</replacementname>
<replacementvalue>
<![CDATA[

<autogen>
__KeyToKey__
KeyCode::K,
KeyCode::VK_OPEN_URL_KM_TEST
</autogen>
<autogen>
__KeyToKey__
KeyCode::H,
KeyCode::VK_OPEN_URL_KM_2DO_CURRENT_URL_AS_NOTE_WATCH
</autogen>
<autogen>
__KeyToKey__
KeyCode::Y,
KeyCode::VK_OPEN_URL_ALFRED_WATCH_TRASH
</autogen>
<autogen>
__KeyToKey__
KeyCode::Y,
KeyCode::VK_OPEN_URL_ALFRED_WATCH_TRASH
</autogen>
<autogen>
__KeyToKey__
KeyCode::I,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_XCODE
</autogen>
<autogen>
__KeyToKey__
KeyCode::C,
KeyCode::VK_OPEN_URL_ALFRED_EMOJI_SEARCH
</autogen>
<autogen>
__KeyToKey__
KeyCode::S,
KeyCode::VK_OPEN_URL_ALFRED_CLONES_DIR_WATCH
</autogen>
<autogen>
__KeyToKey__
KeyCode::B,
KeyCode::VK_OPEN_URL_ALFRED_FORKS_DIR_WATCH
</autogen>
<autogen>
__KeyToKey__
KeyCode::V,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_GOOGLE_DRIVE
</autogen>
<autogen>
__KeyToKey__
KeyCode::X,
KeyCode::VK_OPEN_URL_ALFRED_WATCH_DROPBOX_SHARES
</autogen>
<autogen>
__KeyToKey__
KeyCode::BACKQUOTE,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_ALFRED_WORKFLOWS
</autogen>
<autogen>
__KeyToKey__
KeyCode::SPACE,
KeyCode::VK_OPEN_URL_ALFRED_ULYSSES_SHEETS
</autogen>
<autogen>
__KeyToKey__
KeyCode::F,
KeyCode::VK_OPEN_URL_ALFRED_GIT_REPOS
</autogen>
<autogen>
__KeyToKey__
KeyCode::J,
KeyCode::K, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::R,
KeyCode::VK_OPEN_URL_KM_2DO_CURRENT_URL_AS_NOTE
</autogen>
<autogen>
__KeyToKey__
KeyCode::F19,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_FOLDERS
</autogen>
<autogen>
__KeyToKey__
KeyCode::Q,
KeyCode::VK_OPEN_URL_ALFRED_RECENT_DOWNLOADS
</autogen>
<autogen>
__KeyToKey__
KeyCode::E,
KeyCode::VK_OPEN_URL_KM_NEW_2DO_QUICK_TASK
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMAND_L,
KeyCode::VK_OPEN_URL_ALFRED_ULYSSES_GROUPS
</autogen>
<autogen>
__KeyToKey__
KeyCode::1,
KeyCode::1, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::2,
KeyCode::2, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::3,
KeyCode::3, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::4,
KeyCode::4, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::5,
KeyCode::5, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::6,
KeyCode::6, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::7,
KeyCode::7, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::8,
KeyCode::8, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::9,
KeyCode::9, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::DOT,
KeyCode::F7, ModifierFlag::COMMAND_L | ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::Z,
KeyCode::VK_OPEN_URL_ALFRED_FILTER_KNOWLEDGE_WIKI_FOLDERS
</autogen>
<autogen>
__KeyToKey__
KeyCode::D,
KeyCode::VK_OPEN_URL_ALFRED_DESKTOP_DIR_WATCH
</autogen>
<autogen>
__KeyToKey__
KeyCode::W,
KeyCode::BACKSLASH, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::A,
KeyCode::VK_OPEN_URL_ALFRED_SEARH_MARKDOWN_WIKI
</autogen>
<autogen>
__KeyToKey__
KeyCode::TAB,
KeyCode::VK_OPEN_URL_KM_2DO_CURRENT_URL_AS_NOTE_LEARN
</autogen>
<autogen>
__KeyToKey__
KeyCode::P,
KeyCode::F2, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::SEMICOLON,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SAFARI_HISTORY
</autogen>
<autogen>
__KeyToKey__
KeyCode::T,
KeyCode::VK_OPEN_URL_KM_2DO_CURRENT_URL_AS_NOTE_READ
</autogen>
<autogen>
__KeyToKey__
KeyCode::2,
KeyCode::2, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::4,
KeyCode::4, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::3,
KeyCode::3, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMAND_R,
KeyCode::VK_OPEN_URL_ALFRED_GOOGLE_MAPS_SEARCH
</autogen>
<autogen>
__KeyToKey__
KeyCode::P,
KeyCode::F7, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::G,
KeyCode::VK_OPEN_URL_ALFRED_PROCESS_CONTROL
</autogen>

]]>
</replacementvalue>
</replacementdef>

<item>
<name>gen: sticky slash</name>
<identifier>private.launcher_mode_open_apps_v19</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::SLASH,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v19, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::SLASH
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v19</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::SLASH,
</autogen>

<autogen>
__KeyToKey__
KeyCode::I,
KeyCode::VK_OPEN_URL_SHELL_warp_mouse_cursor_position_front_window_center
</autogen>

</item>

<item>
<name>gen: sticky space - KM palettes - ⇧ + ⌃ + ⌥</name>
<identifier>private.launcher_mode_open_apps_v34</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::SPACE,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v34, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::SPACE,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v34</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::SPACE,
</autogen>

<autogen>
__KeyToKey__
KeyCode::Q,
KeyCode::Q, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::W,
KeyCode::W, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::E,
KeyCode::E, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::R,
KeyCode::R, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::T,
KeyCode::T, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::Y,
KeyCode::Y, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::U,
KeyCode::U, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::I,
KeyCode::I, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::O,
KeyCode::O, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::P,
KeyCode::P, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::A,
KeyCode::A, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::S,
KeyCode::S, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::D,
KeyCode::D, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::F,
KeyCode::F, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::G,
KeyCode::G, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::H,
KeyCode::H, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::J,
KeyCode::VK_OPEN_URL_KM_GET_CURRENT_URL_FROM_SAFARI
</autogen>
<autogen>
__KeyToKey__
KeyCode::K,
KeyCode::K, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::L,
KeyCode::L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::SEMICOLON,
KeyCode::SEMICOLON, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::Z,
KeyCode::Z, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::X,
KeyCode::X, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::C,
KeyCode::C, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::V,
KeyCode::V, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::B,
KeyCode::B, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::N,
KeyCode::N, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::M,
KeyCode::M, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMA,
KeyCode::COMMA, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::DOT,
KeyCode::DOT, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
</autogen>
</item>

<item>
<name>gen: sticky 9 - search files</name>
<identifier>private.launcher_mode_open_apps_v84</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::9,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v84, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::9
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v84</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::9,
</autogen>

<autogen>
__KeyToKey__
KeyCode::G,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_PAGES
</autogen>
<autogen>
__KeyToKey__
KeyCode::F19,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SOULVER
</autogen>
</item>

<item>
<name>gen: sticky dash - alfred</name>
<identifier>private.launcher_mode_open_apps_v78</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::MINUS,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v78, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::MINUS
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v78</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::MINUS,
</autogen>

</item>

<item>
<name>gen: sticky 0 - alfred</name>
<identifier>private.launcher_mode_open_apps_v82</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::0,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v82, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::0
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v82</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::0,
</autogen>

<autogen>
__KeyToKey__
KeyCode::N,
KeyCode::VK_OPEN_URL_ALFRED_CLEAN_FOLDERS
</autogen>
<autogen>
__KeyToKey__
KeyCode::V,
KeyCode::VK_OPEN_URL_ALFRED_CONVERT
</autogen>
<autogen>
__KeyToKey__
KeyCode::Y,
KeyCode::VK_OPEN_URL_ALFRED_CRYPTO_TRACK
</autogen>
<autogen>
__KeyToKey__
KeyCode::B,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_LIBRARY
</autogen>
<autogen>
__KeyToKey__
KeyCode::W,
KeyCode::VK_OPEN_URL_ALFRED_FONT_AWESOME
</autogen>
<autogen>
__KeyToKey__
KeyCode::A,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_APPLE_MAPS
</autogen>
<autogen>
__KeyToKey__
KeyCode::B,
KeyCode::VK_OPEN_URL_ALFRED_PINBOARD
</autogen>
<autogen>
__KeyToKey__
KeyCode::C,
KeyCode::VK_OPEN_URL_ALFRED_COLOUR_PICKER
</autogen>
<autogen>
__KeyToKey__
KeyCode::R,
KeyCode::VK_OPEN_URL_ALFRED_GO_TO_SUB
</autogen>
<autogen>
__KeyToKey__
KeyCode::1,
KeyCode::VK_OPEN_URL_ALFRED_MONTHS_NUMBERS
</autogen>
<autogen>
__KeyToKey__
KeyCode::F,
KeyCode::VK_OPEN_URL_ALFRED_ACTIVATE_FOCUS
</autogen>
<autogen>
__KeyToKey__
KeyCode::U,
KeyCode::VK_OPEN_URL_ALFRED_UNINSTALL_WITH_CLEANMYMAC
</autogen>
<autogen>
__KeyToKey__
KeyCode::V,
KeyCode::VK_OPEN_URL_AFRED_GET_APP_VERSION
</autogen>
<autogen>
__KeyToKey__
KeyCode::E,
KeyCode::VK_OPEN_URL_ALFRED_CHROME_PROFILES
</autogen>
<autogen>
__KeyToKey__
KeyCode::D,
KeyCode::VK_OPEN_URL_ALFRED_ALFRED_DOC
</autogen>
<autogen>
__KeyToKey__
KeyCode::M,
KeyCode::VK_OPEN_URL_ALFRED_TIME
</autogen>
<autogen>
__KeyToKey__
KeyCode::P,
KeyCode::VK_OPEN_URL_ALFRED_CHROME_PROFILES
</autogen>
<autogen>
__KeyToKey__
KeyCode::H,
KeyCode::VK_OPEN_URL_ALFRED_HTTP_CODES
</autogen>
<autogen>
__KeyToKey__
KeyCode::S,
KeyCode::VK_OPEN_URL_ALFRED_SYNONYMS_SEARCH
</autogen>
</item>

<item>
<name>gen: sticky left bracket - chrome</name>
<identifier>private.launcher_mode_open_apps_v75</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::BRACKET_LEFT,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v75, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::9, ModifierFlag::SHIFT_L,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v75</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::BRACKET_LEFT,
</autogen>

<autogen>
__KeyToKey__
KeyCode::C,
KeyCode::VK_OPEN_URL_KM_OPEN_CHROME_URL_CODESANDBOX
</autogen>
<autogen>
__KeyToKey__
KeyCode::S,
KeyCode::VK_OPEN_URL_KM_OPEN_CHROME_URL_SOURCEGRAPH
</autogen>
<autogen>
__KeyToKey__
KeyCode::G,
KeyCode::VK_OPEN_URL_KM_OPEN_CHROME_URL_GITHUB
</autogen>
<autogen>
__KeyToKey__
KeyCode::F,
KeyCode::VK_OPEN_URL_KM_OPEN_CHROME_URL_FACEBOOK
</autogen>
<autogen>
__KeyToKey__
KeyCode::E,
KeyCode::VK_OPEN_URL_KM_OPEN_CHROME_URL_LOCALHOST
</autogen>
</item>

<item>
<name>gen: sticky right bracket - wiki</name>
<identifier>private.launcher_mode_open_apps_v79</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::BRACKET_RIGHT,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v79, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::0, ModifierFlag::SHIFT_L,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v79</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::BRACKET_RIGHT,
</autogen>

</item>

<item>
<name>gen: sticky p - symbols</name>
<identifier>private.launcher_mode_open_apps_v12</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::P,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v12, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::P,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v12</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::P,
</autogen>

<autogen>
__KeyToKey__
KeyCode::SPACE,
KeyCode::U, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::TAB,
KeyCode::VK_OPEN_URL_KM_INSERT_BACKQUOTES_AND_CLIP
</autogen>
<autogen>
__KeyToKey__
KeyCode::Q,
KeyCode::BRACKET_RIGHT, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::C,
KeyCode::DOT,
KeyCode::SLASH
</autogen>
<autogen>
__KeyToKey__
KeyCode::O,
KeyCode::BRACKET_RIGHT,
</autogen>
<autogen>
__KeyToKey__
KeyCode::W,
KeyCode::0, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::F,
KeyCode::5, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::1,
KeyCode::VK_OPEN_URL_KM_F1
</autogen>
<autogen>
__KeyToKey__
KeyCode::2,
KeyCode::VK_OPEN_URL_KM_F2
</autogen>
<autogen>
__KeyToKey__
KeyCode::3,
KeyCode::VK_OPEN_URL_KM_F3
</autogen>
<autogen>
__KeyToKey__
KeyCode::4,
KeyCode::VK_OPEN_URL_KM_F4
</autogen>
<autogen>
__KeyToKey__
KeyCode::5,
KeyCode::VK_OPEN_URL_KM_F5
</autogen>
<autogen>
__KeyToKey__
KeyCode::6,
KeyCode::VK_OPEN_URL_KM_F6
</autogen>
<autogen>
__KeyToKey__
KeyCode::7,
KeyCode::VK_OPEN_URL_KM_F7
</autogen>
</item>

<item>
<name>gen: sticky c - websites</name>
<identifier>private.launcher_mode_open_apps_v41</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::C,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v41, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::C,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v41</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::C,
</autogen>

<autogen>
__KeyToKey__
KeyCode::Z,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_MEDIUM
</autogen>
<autogen>
__KeyToKey__
KeyCode::SHIFT_L,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_TWITTER
</autogen>
<autogen>
__KeyToKey__
KeyCode::3,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_YOUTUBE_AUTOPLAY
</autogen>
<autogen>
__KeyToKey__
KeyCode::DOT,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_GITHUB_ASSIGNED_ISSUES
</autogen>
<autogen>
__KeyToKey__
KeyCode::BRACKET_RIGHT,
KeyCode::VK_OPEN_URL_KM_OPEN_NEWS_ALL
</autogen>
<autogen>
__KeyToKey__
KeyCode::N,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_REGEX101
</autogen>
<autogen>
__KeyToKey__
KeyCode::SLASH,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_REDDIT_UNDREAD_MESSAGES
</autogen>
<autogen>
__KeyToKey__
KeyCode::I,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_FIGMA
</autogen>
<autogen>
__KeyToKey__
KeyCode::D,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_ARXIV
</autogen>
<autogen>
__KeyToKey__
KeyCode::S,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_GOOGLE_DOCS
</autogen>
<autogen>
__KeyToKey__
KeyCode::8,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_LICHESS
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMAND_R,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_REDDIT_UNDREAD_MESSAGES
</autogen>
<autogen>
__KeyToKey__
KeyCode::V,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_MOZILLA_DEV
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMAND_L,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_REDDIT_TOP_NEW
</autogen>
<autogen>
__KeyToKey__
KeyCode::L,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_CODESANDBOX
</autogen>
<autogen>
__KeyToKey__
KeyCode::U,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_CANVAS
</autogen>
<autogen>
__KeyToKey__
KeyCode::0,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_KM_FORUM
</autogen>
<autogen>
__KeyToKey__
KeyCode::9,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_ALFRED_FORUM
</autogen>
<autogen>
__KeyToKey__
KeyCode::DANISH_DOLLAR,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_LOBSTERS
</autogen>
<autogen>
__KeyToKey__
KeyCode::TAB,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_STACK_REAL_TIME
</autogen>
<autogen>
__KeyToKey__
KeyCode::B,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_LOBSTERS
</autogen>
<autogen>
__KeyToKey__
KeyCode::2,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_COURSERA
</autogen>
<autogen>
__KeyToKey__
KeyCode::4,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_MIT_COURSES
</autogen>
<autogen>
__KeyToKey__
KeyCode::SLASH,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_STACK
</autogen>
<autogen>
__KeyToKey__
KeyCode::J,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_YOUTUBE
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMAND_L,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_REDDIT_UNDREAD_MESSAGES
</autogen>
<autogen>
__KeyToKey__
KeyCode::Q,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_QUORA
</autogen>
<autogen>
__KeyToKey__
KeyCode::E,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_LISTENONREPEAT
</autogen>
<autogen>
__KeyToKey__
KeyCode::P,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_PRODUCT_HUNT
</autogen>
<autogen>
__KeyToKey__
KeyCode::R,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_DRIBBLE
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMA,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_HACKER_NEWS_NEW
</autogen>
<autogen>
__KeyToKey__
KeyCode::Y,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_SOUNDCLOUD
</autogen>
<autogen>
__KeyToKey__
KeyCode::BRACKET_LEFT,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_QUORA_ANSWER
</autogen>
<autogen>
__KeyToKey__
KeyCode::SPACE,
KeyCode::X, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::W,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_REDDIT
</autogen>
<autogen>
__KeyToKey__
KeyCode::BACKQUOTE,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_GO_PLAYGROUND
</autogen>
<autogen>
__KeyToKey__
KeyCode::A,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_GOOGLE
</autogen>
<autogen>
__KeyToKey__
KeyCode::O,
KeyCode::VK_OPEN_URL_KM_GODOC
</autogen>
<autogen>
__KeyToKey__
KeyCode::G,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_IMGUR
</autogen>
<autogen>
__KeyToKey__
KeyCode::G,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_GITHUB_FRONT
</autogen>
<autogen>
__KeyToKey__
KeyCode::H,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_HACKER_NEWS
</autogen>
<autogen>
__KeyToKey__
KeyCode::SEMICOLON,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_STACK_OVERFLOW
</autogen>
<autogen>
__KeyToKey__
KeyCode::K,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_GITHUB
</autogen>
<autogen>
__KeyToKey__
KeyCode::M,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_GITHUB_NOTIFICATIONS
</autogen>
</item>

<item>
<name>js code</name>
<identifier>private.launcher_mode_open_apps_v76</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::DOT,@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v76, ModifierFlag::MY_LAUNCHER_MODE,
@end@begin
KeyCode::DOT,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v76</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::DOT,
</autogen>

<autogen>
__KeyToKey__
KeyCode::A,
KeyCode::C,
KeyCode::O,
KeyCode::N,
KeyCode::S,
KeyCode::O,
KeyCode::L,
KeyCode::E,
KeyCode::DOT,
KeyCode::L,
KeyCode::O,
KeyCode::G,
KeyCode::9, ModifierFlag::SHIFT_L,
KeyCode::0, ModifierFlag::SHIFT_L,
KeyCode::CURSOR_LEFT,
</autogen>
<autogen>
__KeyToKey__
KeyCode::Z,
KeyCode::J,
KeyCode::A,
KeyCode::V,
KeyCode::A,
KeyCode::S,
KeyCode::C,
KeyCode::R,
KeyCode::I,
KeyCode::P,
KeyCode::T,
KeyCode::SPACE
</autogen>
</item>

<item>
<name>go code</name>
<identifier>private.launcher_mode_open_apps_v72</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::DOT,@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v72, ModifierFlag::MY_LAUNCHER_MODE,
@end@begin
KeyCode::DOT,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v72</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::DOT,
</autogen>

<autogen>
__KeyToKey__
KeyCode::A,
KeyCode::F,
KeyCode::M,
KeyCode::T,
KeyCode::DOT,
KeyCode::P, ModifierFlag::SHIFT_L,
KeyCode::R,
KeyCode::I,
KeyCode::N,
KeyCode::T,
KeyCode::L,
KeyCode::N,
KeyCode::9, ModifierFlag::SHIFT_L,
KeyCode::0, ModifierFlag::SHIFT_L,
KeyCode::CURSOR_LEFT
</autogen>
<autogen>
__KeyToKey__
KeyCode::S,
KeyCode::G,
KeyCode::O,
KeyCode::L,
KeyCode::A,
KeyCode::N,
KeyCode::G,
KeyCode::SPACE,
</autogen>
<autogen>
__KeyToKey__
KeyCode::F,
KeyCode::F,
KeyCode::M,
KeyCode::T,
KeyCode::DOT,
KeyCode::P, ModifierFlag::SHIFT_L,
KeyCode::R,
KeyCode::I,
KeyCode::N,
KeyCode::T,
KeyCode::F,
KeyCode::9, ModifierFlag::SHIFT_L,
KeyCode::0, ModifierFlag::SHIFT_L,
KeyCode::CURSOR_LEFT
</autogen>
<autogen>
__KeyToKey__
KeyCode::B,
KeyCode::SLASH,
KeyCode::SLASH,
KeyCode::SPACE,
KeyCode::T, ModifierFlag::SHIFT_L,
KeyCode::O, ModifierFlag::SHIFT_L,
KeyCode::D, ModifierFlag::SHIFT_L,
KeyCode::O, ModifierFlag::SHIFT_L,
KeyCode::SEMICOLON, ModifierFlag::SHIFT_L,
KeyCode::SPACE,
</autogen>
<autogen>
__KeyToKey__
KeyCode::R,
KeyCode::R,
KeyCode::E,
KeyCode::T,
KeyCode::U,
KeyCode::R,
KeyCode::N,
KeyCode::SPACE
</autogen>
<autogen>
__KeyToKey__
KeyCode::G,
KeyCode::L,
KeyCode::O,
KeyCode::G,
KeyCode::DOT,
KeyCode::P, ModifierFlag::SHIFT_L,
KeyCode::R,
KeyCode::I,
KeyCode::N,
KeyCode::T,
KeyCode::F,
KeyCode::9, ModifierFlag::SHIFT_L,
KeyCode::0, ModifierFlag::SHIFT_L,
KeyCode::CURSOR_LEFT,
</autogen>
<autogen>
__KeyToKey__
KeyCode::W,
KeyCode::VK_OPEN_URL_KM_GO_PREFILL_COMMENT_OF_FUNCTION
</autogen>
<autogen>
__KeyToKey__
KeyCode::T,
KeyCode::L,
KeyCode::O,
KeyCode::G,
KeyCode::DOT,
KeyCode::F, ModifierFlag::SHIFT_L,
KeyCode::A,
KeyCode::T,
KeyCode::A,
KeyCode::L,
KeyCode::9, ModifierFlag::SHIFT_L,
KeyCode::E,
KeyCode::R,
KeyCode::R,
KeyCode::0, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::C,
KeyCode::W,
KeyCode::O,
KeyCode::R,
KeyCode::K,
KeyCode::F,
KeyCode::L,
KeyCode::O,
KeyCode::W,
KeyCode::SEMICOLON, ModifierFlag::SHIFT_L,
</autogen>
</item>

<item>
<name>py code</name>
<identifier>private.launcher_mode_open_apps_v77</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::DOT,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v77, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::DOT,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v77</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::DOT,
</autogen>

<autogen>
__KeyToKey__
KeyCode::R,
KeyCode::R,
KeyCode::E,
KeyCode::T,
KeyCode::U,
KeyCode::R,
KeyCode::N,
KeyCode::SPACE,
</autogen>
<autogen>
__KeyToKey__
KeyCode::Z,
KeyCode::P,
KeyCode::Y,
KeyCode::T,
KeyCode::H,
KeyCode::O,
KeyCode::N,
KeyCode::SPACE,
</autogen>
<autogen>
__KeyToKey__
KeyCode::A,
KeyCode::P,
KeyCode::R,
KeyCode::I,
KeyCode::N,
KeyCode::T,
KeyCode::9, ModifierFlag::SHIFT_L,
KeyCode::0, ModifierFlag::SHIFT_L,
KeyCode::CURSOR_LEFT
</autogen>
</item>

<item>
<name>gen: sticky comma - one off scripts</name>
<identifier>private.launcher_mode_open_apps_v20</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::COMMA,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v20, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::COMMA,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v20</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::COMMA,
</autogen>

<autogen>
__KeyToKey__
KeyCode::T,
KeyCode::VK_OPEN_URL_KM_LOWERCASE_AND_DASH_SEPARATE_TEXT
</autogen>
<autogen>
__KeyToKey__
KeyCode::Z,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_IN_CLIPBOARD_IN_SAFARI
</autogen>
<autogen>
__KeyToKey__
KeyCode::BACKQUOTE,
KeyCode::VK_OPEN_URL_KM_DUCKDUCKGO_CLIPBOARD
</autogen>
<autogen>
__KeyToKey__
KeyCode::G,
KeyCode::VK_OPEN_URL_KM_COMMIT_WIKI
</autogen>
<autogen>
__KeyToKey__
KeyCode::B,
KeyCode::VK_OPEN_URL_ALFRED_GET_BITLY
</autogen>
<autogen>
__KeyToKey__
KeyCode::H,
KeyCode::VK_OPEN_URL_HAMMERSPOON_TESTER
</autogen>
<autogen>
__KeyToKey__
KeyCode::Z,
KeyCode::VK_OPEN_URL_KM_LIKE_AND_SAVE_CURRENT_UNSPLASH_WALLPAPER
</autogen>
<autogen>
__KeyToKey__
KeyCode::W,
KeyCode::VK_OPEN_URL_ALFRED_TOGGLE_WIFI
</autogen>
<autogen>
__KeyToKey__
KeyCode::A,
KeyCode::VK_OPEN_URL_KM_GOOGLE_CLIPBOARD
</autogen>
<autogen>
__KeyToKey__
KeyCode::C,
KeyCode::VK_OPEN_URL_ALFRED_WIFI_CHECK
</autogen>
<autogen>
__KeyToKey__
KeyCode::E,
KeyCode::VK_OPEN_URL_ALFRED_RESTART_WIFI
</autogen>
</item>

<item>
<name>gen: sticky n - web searches</name>
<identifier>private.launcher_mode_open_apps_v35</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::N,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v35, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::N,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v35</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::N,
</autogen>

<autogen>
__KeyToKey__
KeyCode::1,
KeyCode::1, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::2,
KeyCode::2, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::3,
KeyCode::3, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::4,
KeyCode::4, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::5,
KeyCode::5, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::6,
KeyCode::6, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::X,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_LOBSTERS
</autogen>
<autogen>
__KeyToKey__
KeyCode::SEMICOLON,
KeyCode::VK_OPEN_URL_ALFRED_NPM_SEARCH
</autogen>
<autogen>
__KeyToKey__
KeyCode::F19,
KeyCode::VK_OPEN_URL_ALFRED_LEARN_ANYTHING
</autogen>
<autogen>
__KeyToKey__
KeyCode::D,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_GITHUB_REPOS
</autogen>
<autogen>
__KeyToKey__
KeyCode::Y,
KeyCode::VK_OPEN_URL_ALFRED_GOODREADS
</autogen>
<autogen>
__KeyToKey__
KeyCode::V,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_STACK
</autogen>
<autogen>
__KeyToKey__
KeyCode::T,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_TWITTER
</autogen>
<autogen>
__KeyToKey__
KeyCode::Q,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_QUORA
</autogen>
<autogen>
__KeyToKey__
KeyCode::A,
KeyCode::VK_OPEN_URL_ALFRED_ASK_CREATE_SHARE
</autogen>
<autogen>
__KeyToKey__
KeyCode::H,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_HACKER_NEWS
</autogen>
<autogen>
__KeyToKey__
KeyCode::W,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_GITHUB
</autogen>
<autogen>
__KeyToKey__
KeyCode::B,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_MEDIUM
</autogen>
<autogen>
__KeyToKey__
KeyCode::TAB,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_DRIBBLE
</autogen>
<autogen>
__KeyToKey__
KeyCode::BACKQUOTE,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_IDOPE
</autogen>
<autogen>
__KeyToKey__
KeyCode::C,
KeyCode::VK_OPEN_URL_ALFRED_STACK_OVERFLOW_SEARCH_SUGGESTIONS
</autogen>
<autogen>
__KeyToKey__
KeyCode::E,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SUBREDDITS
</autogen>
<autogen>
__KeyToKey__
KeyCode::G,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_GODOC
</autogen>
<autogen>
__KeyToKey__
KeyCode::S,
KeyCode::VK_OPEN_URL_ALFRED_WEB_SEARCHES
</autogen>
<autogen>
__KeyToKey__
KeyCode::Z,
KeyCode::VK_OPEN_URL_ALFRED_EXPLAIN_SHELL
</autogen>
<autogen>
__KeyToKey__
KeyCode::F,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_INDEXED_GITHUB
</autogen>
<autogen>
__KeyToKey__
KeyCode::P,
KeyCode::VK_OPEN_URL_ALFRED_GOOGLE_MAPS_SEARCH
</autogen>
<autogen>
__KeyToKey__
KeyCode::SPACE,
KeyCode::X, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::R,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_REDDIT
</autogen>
<autogen>
__KeyToKey__
KeyCode::A,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_WOLFRAM_ALPHA
</autogen>
</item>

<item>
<name>gen: sticky m - spotify + twitter</name>
<identifier>private.launcher_mode_open_apps_v17</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::M,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v17, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::M,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v17</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::M,
</autogen>

<autogen>
__KeyToKey__
KeyCode::1,
KeyCode::VK_OPEN_URL_TIMER_10
</autogen>
<autogen>
__KeyToKey__
KeyCode::2,
KeyCode::VK_OPEN_URL_TIMER_20
</autogen>
<autogen>
__KeyToKey__
KeyCode::3,
KeyCode::VK_OPEN_URL_TIMER_30
</autogen>
<autogen>
__KeyToKey__
KeyCode::4,
KeyCode::VK_OPEN_URL_TIMER_40
</autogen>
<autogen>
__KeyToKey__
KeyCode::5,
KeyCode::VK_OPEN_URL_TIMER_50
</autogen>
<autogen>
__KeyToKey__
KeyCode::Z,
KeyCode::VK_OPEN_URL_ALFRED_CREATE_SONG_RADIO
</autogen>
<autogen>
__KeyToKey__
KeyCode::E,
KeyCode::VK_OPEN_URL_ALFRED_TIMER_VIEW
</autogen>
<autogen>
__KeyToKey__
KeyCode::A,
KeyCode::8, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::F,
KeyCode::VK_OPEN_URL_KM_NEW_TWEET_WITH_SAFARI_URL
</autogen>
<autogen>
__KeyToKey__
KeyCode::W,
KeyCode::VK_OPEN_URL_ALFRED_TIMER_START
</autogen>
<autogen>
__KeyToKey__
KeyCode::Q,
KeyCode::VK_OPEN_URL_ALFRED_REMOVE_REMINDER_TIMER
</autogen>
<autogen>
__KeyToKey__
KeyCode::K,
KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_SEARCH_ARTISTS
</autogen>
<autogen>
__KeyToKey__
KeyCode::Y,
KeyCode::VK_OPEN_URL_ALFRED_CREATE_ARTIST_RADIO
</autogen>
<autogen>
__KeyToKey__
KeyCode::H,
KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_REMOVE_SONG_FROM_PLAYLIST
</autogen>
<autogen>
__KeyToKey__
KeyCode::BACKQUOTE,
KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_SEARCH_ONLINE
</autogen>
<autogen>
__KeyToKey__
KeyCode::TAB,
KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_MY_TOPS
</autogen>
<autogen>
__KeyToKey__
KeyCode::F19,
KeyCode::VK_OPEN_URL_KM_SEND_TWEET_WITH_SAFARI_URL
</autogen>
<autogen>
__KeyToKey__
KeyCode::O,
KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_BROWSE
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMAND_L,
KeyCode::3, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::SPACE,
KeyCode::COMMA, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::B,
KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_HISTORY
</autogen>
<autogen>
__KeyToKey__
KeyCode::N,
KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_DISPLAY_SONG
</autogen>
<autogen>
__KeyToKey__
KeyCode::X,
KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_SEARCH_CURRENT_SONG
</autogen>
<autogen>
__KeyToKey__
KeyCode::Y,
KeyCode::VK_OPEN_URL_KM_FOCUS_30_MIN
</autogen>
<autogen>
__KeyToKey__
KeyCode::K,
KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_OPEN_LYRICS
</autogen>
<autogen>
__KeyToKey__
KeyCode::Y,
KeyCode::VK_OPEN_URL_ALFRED_CREATE_ARTIST_RADIO
</autogen>
<autogen>
__KeyToKey__
KeyCode::R,
KeyCode::VK_OPEN_URL_ALFRED_WATCH_SPOTIFY_LIKES
</autogen>
<autogen>
__KeyToKey__
KeyCode::G,
KeyCode::VK_OPEN_URL_ALFRED_ADD_SONG_SPOTIFY
</autogen>
<autogen>
__KeyToKey__
KeyCode::C,
KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_PLAYLISTS
</autogen>
<autogen>
__KeyToKey__
KeyCode::S,
KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_MAIN
</autogen>
<autogen>
__KeyToKey__
KeyCode::D,
KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_CURRENT_TRACK
</autogen>
<autogen>
__KeyToKey__
KeyCode::V,
KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_ADD_SONG_TO_PLAYLIST
</autogen>
</item>

<item>
<name>gen: sticky v</name>
<identifier>private.launcher_mode_open_apps_v16</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::V,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v16, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::V,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v16</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::V,
</autogen>

<autogen>
__KeyToKey__
KeyCode::F,
KeyCode::VK_OPEN_URL_KM_EDIT_DOTBOT
</autogen>
<autogen>
__KeyToKey__
KeyCode::S,
KeyCode::VK_OPEN_URL_KM_WIKI_SUMMARY
</autogen>
<autogen>
__KeyToKey__
KeyCode::P,
KeyCode::VK_OPEN_URL_KM_MAP_KNOWLEDGE
</autogen>
<autogen>
__KeyToKey__
KeyCode::D,
KeyCode::VK_OPEN_URL_KM_EDIT_NIX_CONFIGURATION
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMA,
KeyCode::VK_OPEN_URL_KM_EDIT_LIKES
</autogen>
<autogen>
__KeyToKey__
KeyCode::DOT,
KeyCode::VK_OPEN_URL_KM_EDIT_PROJECTS
</autogen>
<autogen>
__KeyToKey__
KeyCode::SLASH,
KeyCode::VK_OPEN_URL_KM_EDIT_ABOUT
</autogen>
<autogen>
__KeyToKey__
KeyCode::Q,
KeyCode::VK_OPEN_URL_KM_EDIT_MY_MACOS
</autogen>
<autogen>
__KeyToKey__
KeyCode::SPACE,
KeyCode::V, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::DOT,
KeyCode::M, ModifierFlag::CONTROL_L, ModifierFlag::COMMAND_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::W,
KeyCode::VK_OPEN_URL_KM_WIKI_RULES
</autogen>
<autogen>
__KeyToKey__
KeyCode::E,
KeyCode::VK_OPEN_URL_KM_WIKI_PROCESSES
</autogen>
<autogen>
__KeyToKey__
KeyCode::Z,
KeyCode::M, ModifierFlag::CONTROL_L, ModifierFlag::COMMAND_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::A,
KeyCode::VK_OPEN_URL_KM_EDIT_VIMRC_CONFIG
</autogen>
<autogen>
__KeyToKey__
KeyCode::SEMICOLON,
KeyCode::VK_OPEN_URL_KM_EDIT_KARABINER_CONFIG
</autogen>
<autogen>
__KeyToKey__
KeyCode::DOT,
KeyCode::X, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMAND_L,
KeyCode::I, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::QUOTE,
KeyCode::VK_OPEN_URL_ALFRED_PLAY_MY_LIKES_PLAYLIST
</autogen>
<autogen>
__KeyToKey__
KeyCode::L,
ConsumerKeyCode::MUSIC_NEXT
</autogen>
<autogen>
__KeyToKey__
KeyCode::R,
KeyCode::VK_OPEN_URL_KM_WIKI_MY_WORKFLOW
</autogen>
<autogen>
__KeyToKey__
KeyCode::W,
KeyCode::VK_OPEN_URL_ALFRED_PLAY_ARTIST_OF_SONG
</autogen>
<autogen>
__KeyToKey__
KeyCode::H,
ConsumerKeyCode::MUSIC_PREV
</autogen>
<autogen>
__KeyToKey__
KeyCode::K,
ConsumerKeyCode::MUSIC_PLAY
</autogen>
<autogen>
__KeyToKey__
KeyCode::1,
KeyCode::VK_OPEN_URL_ALFRED_SPOTIFY_ADD_SONG_TO_PLAYLIST
</autogen>
<autogen>
__KeyToKey__
KeyCode::J,
ConsumerKeyCode::VOLUME_MUTE
</autogen>
<autogen>
__KeyToKey__
KeyCode::O,
ConsumerKeyCode::BRIGHTNESS_UP
</autogen>
<autogen>
__KeyToKey__
KeyCode::I,
ConsumerKeyCode::BRIGHTNESS_DOWN
</autogen>
<autogen>
__KeyToKey__
KeyCode::M,
ConsumerKeyCode::VOLUME_UP
</autogen>
<autogen>
__KeyToKey__
KeyCode::N,
ConsumerKeyCode::VOLUME_DOWN
</autogen>
</item>

<item>
<name>gen: sticky [ - more maps</name>
<identifier>private.launcher_mode_open_apps_v73</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
<autogen>
__KeyToKey__
KeyCode::S,
</autogen>
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::BRACKET_LEFT,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v73, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::9, ModifierFlag::SHIFT_L
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v73</identifier>

<autogen>
__BlockUntilKeyUp__ KeyCode::BRACKET_LEFT,
</autogen>

<autogen>
__KeyToKey__
KeyCode::Q,
KeyCode::Q, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::W,
KeyCode::W, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::E,
KeyCode::E, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::R,
KeyCode::R, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::T,
KeyCode::T, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::Y,
KeyCode::Y, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::U,
KeyCode::U, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::I,
KeyCode::I, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::O,
KeyCode::O, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::P,
KeyCode::P, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::1,
KeyCode::A, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::S,
KeyCode::S, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::D,
KeyCode::D, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::F,
KeyCode::F, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::G,
KeyCode::G, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::H,
KeyCode::H, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::J,
KeyCode::J, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::K,
KeyCode::K, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::L,
KeyCode::L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::SEMICOLON,
KeyCode::SEMICOLON, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::Z,
KeyCode::Z, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::X,
KeyCode::X, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::C,
KeyCode::C, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::V,
KeyCode::V, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::B,
KeyCode::B, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::N,
KeyCode::N, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::M,
KeyCode::M, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
</item>

<item>
<name>gen: sticky w - open top apps</name>
<identifier>private.launcher_mode_open_apps_v3</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::W,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v3, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::W,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v3</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::W,
</autogen>

<autogen>
__KeyToKey__
KeyCode::I,
KeyCode::VK_OPEN_URL_KM_OPEN_CHROME
</autogen>
<autogen>
__KeyToKey__
KeyCode::U,
KeyCode::VK_OPEN_URL_KM_OPEN_FIREFOX_DEV
</autogen>
<autogen>
__KeyToKey__
KeyCode::H,
KeyCode::VK_OPEN_URL_KM_OPEN_XCODE
</autogen>
<autogen>
__KeyToKey__
KeyCode::T,
KeyCode::VK_OPEN_URL_KM_OPEN_CONSOLE
</autogen>
<autogen>
__KeyToKey__
KeyCode::DOT,
KeyCode::VK_OPEN_URL_KM_OPEN_KARABINER_ELEMENTS
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMA,
KeyCode::VK_OPEN_URL_KM_OPEN_SPOTIFY
</autogen>
<autogen>
__KeyToKey__
KeyCode::C,
KeyCode::VK_OPEN_URL_KM_OPEN_SCRIPT_EDITOR
</autogen>
<autogen>
__KeyToKey__
KeyCode::V,
KeyCode::VK_OPEN_URL_KM_OPEN_MINDNODE
</autogen>
<autogen>
__KeyToKey__
KeyCode::4,
KeyCode::VK_OPEN_URL_KM_OPEN_CONSOLE
</autogen>
<autogen>
__KeyToKey__
KeyCode::5,
KeyCode::VK_OPEN_URL_KM_OPEN_ACTIVITY_MONITOR
</autogen>
<autogen>
__KeyToKey__
KeyCode::Y,
KeyCode::VK_OPEN_URL_KM_OPEN_FIREFOX
</autogen>
<autogen>
__KeyToKey__
KeyCode::B,
KeyCode::VK_OPEN_URL_KM_OPEN_BETTERTOUCHTOOL
</autogen>
<autogen>
__KeyToKey__
KeyCode::M,
KeyCode::VK_OPEN_URL_KM_OPEN_TOWER
</autogen>
<autogen>
__KeyToKey__
KeyCode::F19,
KeyCode::VK_OPEN_URL_KM_OPEN_FINDER
</autogen>
<autogen>
__KeyToKey__
KeyCode::SPACE,
KeyCode::8, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::K,
KeyCode::VK_OPEN_URL_KM_OPEN_SAFARI
</autogen>
<autogen>
__KeyToKey__
KeyCode::R,
KeyCode::VK_OPEN_URL_KM_OPEN_FANTASTICAL
</autogen>
<autogen>
__KeyToKey__
KeyCode::E,
KeyCode::VK_OPEN_URL_KM_OPEN_TRELLO
</autogen>
<autogen>
__KeyToKey__
KeyCode::G,
KeyCode::VK_OPEN_URL_KM_OPEN_SNIPPETSLAB
</autogen>
<autogen>
__KeyToKey__
KeyCode::F,
KeyCode::VK_OPEN_URL_KM_OPEN_2DO
</autogen>
<autogen>
__KeyToKey__
KeyCode::Y,
KeyCode::7, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L <!-- Focus on Desktop 1 -->
</autogen>
<autogen>
__KeyToKey__
KeyCode::SLASH,
KeyCode::VK_OPEN_URL_KM_OPEN_XCODE
</autogen>
<autogen>
__KeyToKey__
KeyCode::J,
KeyCode::VK_OPEN_URL_KM_OPEN_ITERM
</autogen>
<autogen>
__KeyToKey__
KeyCode::A,
KeyCode::1, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::L,
KeyCode::VK_OPEN_URL_KM_OPEN_SUBLIME_TEXT
</autogen>
<autogen>
__KeyToKey__
KeyCode::SEMICOLON,
KeyCode::VK_OPEN_URL_KM_OPEN_VS_CODE
</autogen>
<autogen>
__KeyToKey__
KeyCode::O,
KeyCode::VK_OPEN_URL_KM_OPEN_KEYBOARD_MAESTRO
</autogen>
<autogen>
__KeyToKey__
KeyCode::N,
KeyCode::VK_OPEN_URL_KM_OPEN_SHIP
</autogen>
</item>

<item>
<name>gen: sticky quote - scroll</name>
<identifier>private.launcher_mode_open_apps_v32</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::QUOTE,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v32, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::QUOTE,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v32</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::QUOTE,
</autogen>

<autogen>
__KeyToKey__
KeyCode::G,
KeyCode::VK_OPEN_URL_KM_WIKI_MY_GITHUB
</autogen>

<!-- Scroll -->
<autogen>__KeyToKey__ KeyCode::SEMICOLON, KeyCode::VK_MOUSEKEY_HIGHSPEED, ModifierFlag::MOUSE_KEYS_MODE_2</autogen>
<autogen>__KeyToKey__ KeyCode::O, KeyCode::VK_MOUSEKEY_HIGHSPEED, ModifierFlag::MOUSE_KEYS_MODE_2</autogen>
<autogen>__KeyToKey__ KeyCode::P, KeyCode::VK_MOUSEKEY_HIGHSPEED, ModifierFlag::MOUSE_KEYS_MODE_2</autogen>

<autogen>
__KeyToKey__
KeyCode::J,
KeyCode::VK_MOUSEKEY_SCROLL_DOWN, ModifierFlag::MOUSE_KEYS_MODE_2,
</autogen>
<autogen>
__KeyToKey__
KeyCode::K,
KeyCode::VK_MOUSEKEY_SCROLL_UP, ModifierFlag::MOUSE_KEYS_MODE_2,
</autogen>
</item>

<item>
<name>gen: sticky x - alfred my mind</name>
<identifier>private.launcher_mode_open_apps_v43</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::X,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v43, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::X,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v43</identifier>

<autogen>
__BlockUntilKeyUp__ KeyCode::X,
</autogen>

<autogen>
__KeyToKey__
KeyCode::R,
KeyCode::VK_OPEN_URL_ALFRED_MIND_QUERIES
</autogen>
<autogen>
__KeyToKey__
KeyCode::M,
KeyCode::VK_OPEN_URL_ALFRED_MIND_ARTICLES
</autogen>
<autogen>
__KeyToKey__
KeyCode::SEMICOLON,
KeyCode::VK_OPEN_URL_ALFRED_MIND_SLACK
</autogen>
<autogen>
__KeyToKey__
KeyCode::K,
KeyCode::VK_OPEN_URL_ALFRED_MIND_STACK
</autogen>
<autogen>
__KeyToKey__
KeyCode::B,
KeyCode::VK_OPEN_URL_ALFRED_MIND_BLOGS
</autogen>
<autogen>
__KeyToKey__
KeyCode::L,
KeyCode::VK_OPEN_URL_ALFRED_MIND_WIKI
</autogen>
<autogen>
__KeyToKey__
KeyCode::J,
KeyCode::VK_OPEN_URL_ALFRED_MIND_PROFILES
</autogen>
<autogen>
__KeyToKey__
KeyCode::O,
KeyCode::VK_OPEN_URL_ALFRED_MIND_WEB
</autogen>
<autogen>
__KeyToKey__
KeyCode::N,
KeyCode::VK_OPEN_URL_ALFRED_MIND_BOOKS
</autogen>
<autogen>
__KeyToKey__
KeyCode::I,
KeyCode::VK_OPEN_URL_ALFRED_MIND_REDDIT
</autogen>
<autogen>
__KeyToKey__
KeyCode::SPACE,
KeyCode::B, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::SEMICOLON,
KeyCode::SEMICOLON, ModifierFlag::SHIFT_L,
KeyCode::5, ModifierFlag::SHIFT_L,
KeyCode::S,
KeyCode::SLASH
</autogen>
</item>

<item>
<name>gen: sticky 1 - lists</name>
<identifier>private.launcher_mode_open_apps_v80</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::1,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v80, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::1,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v80</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::1,
</autogen>

<autogen>
__KeyToKey__
KeyCode::F19,
KeyCode::Z, ModifierFlag::CONTROL_L, ModifierFlag::COMMAND_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::M,
KeyCode::VK_OPEN_URL_KM_LIST_COMMAND_LINE_TOOLS
</autogen>
<autogen>
__KeyToKey__
KeyCode::G,
KeyCode::VK_OPEN_URL_KM_LIST_PROGRAMMING_LANGUAGES
</autogen>
<autogen>
__KeyToKey__
KeyCode::R,
KeyCode::VK_OPEN_URL_KM_LIST_RESEARCH_PAPERS
</autogen>
<autogen>
__KeyToKey__
KeyCode::U,
KeyCode::VK_OPEN_URL_KM_LIST_COURSES
</autogen>
<autogen>
__KeyToKey__
KeyCode::E,
KeyCode::VK_OPEN_URL_KM_LIST_QUOTES
</autogen>
<autogen>
__KeyToKey__
KeyCode::T,
KeyCode::VK_OPEN_URL_KM_LIST_WEBSITES
</autogen>
<autogen>
__KeyToKey__
KeyCode::O,
KeyCode::VK_OPEN_URL_KM_LIST_BOOKS
</autogen>
<autogen>
__KeyToKey__
KeyCode::L,
KeyCode::VK_OPEN_URL_KM_LIST_BLOGS
</autogen>
<autogen>
__KeyToKey__
KeyCode::D,
KeyCode::VK_OPEN_URL_KM_LIST_REDDIT
</autogen>
</item>

<item>
<name>gen: sticky 2 - moving</name>
<identifier>private.launcher_mode_open_apps_v93</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::2,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v93, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::2,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v93</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::2,
</autogen>

<autogen>
__KeyToKey__
KeyCode::I,
KeyCode::DELETE, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::SEMICOLON,
KeyCode::CURSOR_UP, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::U,
KeyCode::DELETE, ModifierFlag::COMMAND_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::P,
KeyCode::DELETE, ModifierFlag::COMMAND_L, ModifierFlag::FN,
</autogen>
<autogen>
__KeyToKey__
KeyCode::QUOTE,
KeyCode::CURSOR_DOWN, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::O,
KeyCode::DELETE, ModifierFlag::OPTION_L, ModifierFlag::FN,
</autogen>
<autogen>
__KeyToKey__
KeyCode::F,
KeyCode::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::J,
KeyCode::CURSOR_DOWN, ModifierFlag::COMMAND_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::L,
KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::H,
KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::K,
KeyCode::CURSOR_UP, ModifierFlag::COMMAND_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::N,
KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMA,
KeyCode::CURSOR_DOWN, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::SLASH,
KeyCode::CURSOR_UP, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::M,
KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::F19,
KeyCode::R, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::O,
KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::I,
KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::M,
KeyCode::K, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::SPACE,
KeyCode::G, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L,
</autogen>
</item>

<item>
<name>gen: sticky 6 - things</name>
<identifier>private.launcher_mode_open_apps_v22</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::6,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v22, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::6,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v22</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::6,
</autogen>

<autogen>
__KeyToKey__
KeyCode::SPACE,
KeyCode::N, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::Q,
KeyCode::Q, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::Z,
KeyCode::Z, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::W,
KeyCode::W, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::E,
KeyCode::E, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::R,
KeyCode::R, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::T,
KeyCode::T, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::Y,
KeyCode::Y, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::U,
KeyCode::U, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::I,
KeyCode::I, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::O,
KeyCode::O, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::P,
KeyCode::P, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::A,
KeyCode::A, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::S,
KeyCode::S, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::D,
KeyCode::D, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::F,
KeyCode::F, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::G,
KeyCode::G, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::H,
KeyCode::H, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::J,
KeyCode::J, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::K,
KeyCode::K, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::L,
KeyCode::L, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::SEMICOLON,
KeyCode::SEMICOLON, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::X,
KeyCode::X, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::C,
KeyCode::C, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::V,
KeyCode::V, ModifierFlag::COMMAND_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::B,
KeyCode::B, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::N,
KeyCode::N, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::M,
KeyCode::M, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMA,
KeyCode::COMMA, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L,
</autogen>
</item>

<item>
<name>gen: sticky tab - option</name>
<identifier>private.launcher_mode_open_apps_v55</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::TAB,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v55, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::TAB,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v55</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::TAB,
</autogen>

<autogen>
__KeyToKey__
KeyCode::SPACE,
KeyCode::G, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::EQUAL,
KeyCode::EQUAL, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::O,
KeyCode::O, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::I,
KeyCode::I, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::5,
KeyCode::5, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::4,
KeyCode::4, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::Q,
KeyCode::Q, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::W,
KeyCode::W, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::E,
KeyCode::E, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::R,
KeyCode::R, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::T,
KeyCode::T, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::Y,
KeyCode::Y, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::U,
KeyCode::U, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::I,
KeyCode::I, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::O,
KeyCode::O, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::P,
KeyCode::P, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::BRACKET_LEFT,
KeyCode::BRACKET_LEFT, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::BRACKET_RIGHT,
KeyCode::BRACKET_RIGHT, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::A,
KeyCode::A, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::S,
KeyCode::S, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::D,
KeyCode::D, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::F,
KeyCode::F, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::9,
KeyCode::9, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::3,
KeyCode::3, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::2,
KeyCode::2, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::G,
KeyCode::G, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::H,
KeyCode::H, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::J,
KeyCode::J, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::BACKSLASH,
KeyCode::BACKSLASH, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::MINUS,
KeyCode::MINUS, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::0,
KeyCode::0, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::K,
KeyCode::K, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::L,
KeyCode::L, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::K,
KeyCode::SEMICOLON, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::QUOTE,
KeyCode::QUOTE, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::Z,
KeyCode::Z, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::X,
KeyCode::X, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::C,
KeyCode::C, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::V,
KeyCode::V, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::B,
KeyCode::B, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::N,
KeyCode::N, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::M,
KeyCode::M, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMA,
KeyCode::COMMA, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::DOT,
KeyCode::DOT, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::SLASH,
KeyCode::SLASH, ModifierFlag::OPTION_L
</autogen>
</item>

<item>
<name>gen: sticky 5</name>
<identifier>private.launcher_mode_open_apps_v54</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::5,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v54, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::5,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v54</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::5,
</autogen>

<autogen>
__KeyToKey__
KeyCode::SPACE,
KeyCode::Y, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L
</autogen>
</item>

<item>
<name>gen: sticky 4 - paths</name>
<identifier>private.launcher_mode_open_apps_v53</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::4,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v53, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::4,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v53</identifier>

<autogen>
__BlockUntilKeyUp__ KeyCode::4,
</autogen>

<autogen>
__KeyToKey__
KeyCode::F19,
KeyCode::Y, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::M,
KeyCode::VK_OPEN_URL_KM_OPEN_PATH_LEARN
</autogen>
<autogen>
__KeyToKey__
KeyCode::L,
KeyCode::VK_OPEN_URL_KM_OPEN_PATH_TEST
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMA,
KeyCode::VK_OPEN_URL_KM_OPEN_PATH_APPLICATIONS
</autogen>
<autogen>
__KeyToKey__
KeyCode::QUOTE,
KeyCode::VK_OPEN_URL_KM_OPEN_PATH_APP
</autogen>
<autogen>
__KeyToKey__
KeyCode::DOT,
KeyCode::VK_OPEN_URL_KM_OPEN_PATH_ROOT
</autogen>
<autogen>
__KeyToKey__
KeyCode::H,
KeyCode::VK_OPEN_URL_KM_OPEN_PATH_GO_SRC_GITHUB
</autogen>
<autogen>
__KeyToKey__
KeyCode::F,
KeyCode::VK_OPEN_URL_KM_OPEN_PATH_PDFS
</autogen>
<autogen>
__KeyToKey__
KeyCode::U,
KeyCode::VK_OPEN_URL_KM_OPEN_PATH_UNI
</autogen>
<autogen>
__KeyToKey__
KeyCode::I,
KeyCode::VK_OPEN_URL_KM_OPEN_PATH_IDEAS
</autogen>
<autogen>
__KeyToKey__
KeyCode::P,
KeyCode::VK_OPEN_URL_KM_OPEN_PATH_PAPERS
</autogen>
<autogen>
__KeyToKey__
KeyCode::SEMICOLON,
KeyCode::VK_OPEN_URL_KM_OPEN_PATH_DROPBOX
</autogen>
<autogen>
__KeyToKey__
KeyCode::Y,
KeyCode::VK_OPEN_URL_KM_OPEN_PATH_APP
</autogen>
<autogen>
__KeyToKey__
KeyCode::G,
KeyCode::VK_OPEN_URL_KM_OPEN_PATH_GOPATH
</autogen>
<autogen>
__KeyToKey__
KeyCode::A,
KeyCode::VK_OPEN_URL_KM_OPEN_PATH_DOTFILES
</autogen>
<autogen>
__KeyToKey__
KeyCode::Q,
KeyCode::VK_OPEN_URL_KM_OPEN_PATH_APPLICATION_SUPPORT
</autogen>
<autogen>
__KeyToKey__
KeyCode::B,
KeyCode::VK_OPEN_URL_KM_OPEN_PATH_BOOKS
</autogen>
<autogen>
__KeyToKey__
KeyCode::K,
KeyCode::VK_OPEN_URL_KM_OPEN_PATH_HOME
</autogen>
<autogen>
__KeyToKey__
KeyCode::O,
KeyCode::VK_OPEN_URL_KM_OPEN_PATH_DOCUMENTS
</autogen>
<autogen>
__KeyToKey__
KeyCode::SPACE,
KeyCode::F1, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L
</autogen>
</item>

<item>
<name>gen: sticky 3 - files</name>
<identifier>private.launcher_mode_open_apps_v51</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::3,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v51, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::3,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v51</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::3,
</autogen>

<autogen>
__KeyToKey__
KeyCode::G,
KeyCode::VK_OPEN_URL_KM_EDIT_GIT_FUNCTIONS
</autogen>
<autogen>
__KeyToKey__
KeyCode::F,
KeyCode::VK_OPEN_URL_KM_EDIT_FZF_FUNCTIONS
</autogen>
<autogen>
__KeyToKey__
KeyCode::G,
KeyCode::VK_OPEN_URL_KM_EDIT_GITCONFIG
</autogen>
<autogen>
__KeyToKey__
KeyCode::N,
KeyCode::VK_OPEN_URL_KM_EDIT_ZSH_ENV
</autogen>
<autogen>
__KeyToKey__
KeyCode::B,
KeyCode::VK_OPEN_URL_KM_EDIT_ZSH_BINDINGS
</autogen>
<autogen>
__KeyToKey__
KeyCode::L,
KeyCode::VK_OPEN_URL_KM_EDIT_ZSHRC
</autogen>
<autogen>
__KeyToKey__
KeyCode::K,
KeyCode::VK_OPEN_URL_KM_EDIT_ASK_CREATE_SHARE
</autogen>
<autogen>
__KeyToKey__
KeyCode::Q,
KeyCode::Q, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMA,
KeyCode::COMMA, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::W,
KeyCode::W, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::E,
KeyCode::E, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::R,
KeyCode::R, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::T,
KeyCode::T, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::Y,
KeyCode::Y, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::I,
KeyCode::VK_OPEN_URL_KM_EDIT_ALIASES_FILE
</autogen>
<autogen>
__KeyToKey__
KeyCode::O,
KeyCode::VK_OPEN_URL_KM_EDIT_ZSH_FUNCTIONS
</autogen>
<autogen>
__KeyToKey__
KeyCode::P,
KeyCode::P, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::A,
KeyCode::A, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::S,
KeyCode::S, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::D,
KeyCode::D, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::F,
KeyCode::F, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::SEMICOLON,
KeyCode::VK_OPEN_URL_KM_EDIT_WEB_SEARCHES
</autogen>
<autogen>
__KeyToKey__
KeyCode::Z,
KeyCode::Z, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::X,
KeyCode::X, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::C,
KeyCode::C, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::V,
KeyCode::V, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::V,
KeyCode::V, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::B,
KeyCode::B, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::M,
KeyCode::M, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L,
</autogen>
</item>

<item>
<name>gen: sticky g - wm</name>
<identifier>private.launcher_mode_open_apps_v11</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::G,@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v11, ModifierFlag::MY_LAUNCHER_MODE,
@end@begin
KeyCode::G,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v11</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::G,
</autogen>

<autogen>
__KeyToKey__
KeyCode::S,
KeyCode::J, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::O,
KeyCode::VK_OPEN_URL_ALFRED_NEW_TODO
</autogen>
<autogen>
__KeyToKey__
KeyCode::U,
KeyCode::VK_OPEN_URL_KM_ADD_CLIPBOARD_AS_ACTIVE_TODO
</autogen>
<autogen>
__KeyToKey__
KeyCode::I,
KeyCode::VK_OPEN_URL_KM_ADD_SELECTED_TEXT_AS_ACTIVE_TODO
</autogen>
<autogen>
__KeyToKey__
KeyCode::A,
KeyCode::H, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::X,
KeyCode::P, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::2,
KeyCode::U, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::3,
KeyCode::I, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::4,
KeyCode::O, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::R,
KeyCode::VK_OPEN_URL_HAMMERSPOON_SHOW_TIME
</autogen>
<autogen>
__KeyToKey__
KeyCode::SPACE,
KeyCode::VK_OPEN_URL_KM_CREATE_SNIPPETSLAB_SNIPPET_FROM_SELECTION
</autogen>
<autogen>
__KeyToKey__
KeyCode::M,
KeyCode::F4, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::X,
KeyCode::T, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::1,
KeyCode::6, ModifierFlag::CONTROL_L, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::Q,
KeyCode::4, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::W,
KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::SEMICOLON,
KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::E,
KeyCode::W, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::1,
KeyCode::5, ModifierFlag::CONTROL_L, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::F19,
KeyCode::6, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
KeyCode::VK_OPEN_URL_ALFRED_SCREENSHOT_TO_GOOGLE
</autogen>
<autogen>
__KeyToKey__
KeyCode::DOT,
KeyCode::E, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMA,
KeyCode::8, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::SLASH,
KeyCode::U, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::L,
KeyCode::D, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::QUOTE,
KeyCode::F10, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::D,
KeyCode::VK_OPEN_URL_HAMMERSPOON_SHOW_CLIPBOARD_CONTENT
</autogen>
<autogen>
__KeyToKey__
KeyCode::N,
KeyCode::F12, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::J,
KeyCode::VK_OPEN_URL_HAMMERSPOON_SHOW_TODO
</autogen>
<autogen>
__KeyToKey__
KeyCode::B,
KeyCode::S, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L,  <!-- Move window to another screen -->
</autogen>
<autogen>
__KeyToKey__
KeyCode::H,
KeyCode::A, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::P,
KeyCode::DOT,
KeyCode::SLASH
</autogen>
<autogen>
__KeyToKey__
KeyCode::K,
KeyCode::F, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::Z,
KeyCode::VK_OPEN_URL_ALFRED_DISMISS_NOTIFICATIONS
</autogen>
</item>

<item>
<name>gen: sticky right shift - things</name>
<identifier>private.launcher_mode_open_apps_v36</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::SHIFT_R,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v36, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::DELETE,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v36</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::SHIFT_R,
</autogen>

</item>

<item>
<name>gen: sticky r - open other apps</name>
<identifier>private.launcher_mode_open_apps_v8</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::R,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v8, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::R,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v8</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::R,
</autogen>

<autogen>
__KeyToKey__
KeyCode::SPACE,
KeyCode::S, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::1,
KeyCode::VK_OPEN_URL_KM_OPEN_HAZEL
</autogen>
<autogen>
__KeyToKey__
KeyCode::DOT,
KeyCode::VK_OPEN_URL_KM_OPEN_BREATHING_ZONE
</autogen>
<autogen>
__KeyToKey__
KeyCode::U,
KeyCode::VK_OPEN_URL_KM_OPEN_ACTUAL
</autogen>
<autogen>
__KeyToKey__
KeyCode::L,
KeyCode::VK_OPEN_URL_KM_OPEN_ULYSSES
</autogen>
<autogen>
__KeyToKey__
KeyCode::SEMICOLON,
KeyCode::VK_OPEN_URL_KM_OPEN_PAW
</autogen>
<autogen>
__KeyToKey__
KeyCode::SLASH,
KeyCode::VK_OPEN_URL_KM_OPEN_LITTLE_SNITCH_CONFIGURATION
</autogen>
<autogen>
__KeyToKey__
KeyCode::D,
KeyCode::VK_OPEN_URL_KM_OPEN_NOTES
</autogen>
<autogen>
__KeyToKey__
KeyCode::4,
KeyCode::VK_OPEN_URL_KM_OPEN_MAPS
</autogen>
<autogen>
__KeyToKey__
KeyCode::TAB,
KeyCode::VK_OPEN_URL_KM_OPEN_FLUME
</autogen>
<autogen>
__KeyToKey__
KeyCode::S,
KeyCode::VK_OPEN_URL_KM_OPEN_KARABINER_PREFERENCES
</autogen>
<autogen>
__KeyToKey__
KeyCode::Q,
KeyCode::VK_OPEN_URL_KM_OPEN_IINA
</autogen>
<autogen>
__SimultaneousKeyPresses__
KeyCode::J, KeyCode::K,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SAFARI_BOOKMARKS
</autogen>
<autogen>
__KeyToKey__
KeyCode::T,
KeyCode::VK_OPEN_URL_KM_OPEN_TRANSMISSION
</autogen>
<autogen>
__KeyToKey__
KeyCode::T,
KeyCode::VK_OPEN_URL_KM_OPEN_HAMMERSPOON
</autogen>
<autogen>
__KeyToKey__
KeyCode::P,
KeyCode::VK_OPEN_URL_KM_OPEN_PAPRIKA_RECIPE_MANAGER
</autogen>
<autogen>
__KeyToKey__
KeyCode::B,
KeyCode::VK_OPEN_URL_KM_EDIT_KEYBOARD_SHORTCUTS
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMA,
KeyCode::VK_OPEN_URL_KM_OPEN_DAY_ONE
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMAND_R,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_SCREENFLOW
</autogen>
<autogen>
__KeyToKey__
KeyCode::M,
KeyCode::VK_OPEN_URL_KM_OPEN_MARKED
</autogen>
<autogen>
__KeyToKey__
KeyCode::F19,
KeyCode::VK_OPEN_URL_ALFRED_IMGUR_SCREENSHOT_AND_SAVE_INBOX
</autogen>
<autogen>
__KeyToKey__
KeyCode::Z,
KeyCode::VK_OPEN_URL_KM_OPEN_ITUNES
</autogen>
<autogen>
__KeyToKey__
KeyCode::S,
KeyCode::VK_OPEN_URL_KM_OPEN_ITUNES
</autogen>
<autogen>
__KeyToKey__
KeyCode::A,
KeyCode::VK_OPEN_URL_KM_OPEN_ALFRED_PREFERENCES
</autogen>
<autogen>
__KeyToKey__
KeyCode::I,
KeyCode::VK_OPEN_URL_KM_OPEN_PIXAVE
</autogen>
<autogen>
__KeyToKey__
KeyCode::E,
KeyCode::VK_OPEN_URL_KM_OPEN_REEDER
</autogen>
<autogen>
__KeyToKey__
KeyCode::J,
KeyCode::VK_OPEN_URL_KM_OPEN_DICTIONARY
</autogen>
<autogen>
__KeyToKey__
KeyCode::H,
KeyCode::VK_OPEN_URL_KM_OPEN_HAMMERSPOON
</autogen>
<autogen>
__KeyToKey__
KeyCode::O,
KeyCode::F10, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::K,
KeyCode::VK_OPEN_URL_KM_OPEN_PDF_EXPERT
</autogen>
<autogen>
__KeyToKey__
KeyCode::W,
KeyCode::VK_OPEN_URL_KM_OPEN_1PASSWORD
</autogen>
<autogen>
__KeyToKey__
KeyCode::V,
KeyCode::VK_OPEN_URL_KM_OPEN_KEYCHAIN_ACCESS
</autogen>
<autogen>
__KeyToKey__
KeyCode::N,
KeyCode::VK_OPEN_URL_KM_OPEN_TIMING
</autogen>
</item>

<item>
<name>gen: sticky u - websites</name>
<identifier>private.launcher_mode_open_apps_v33</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::U,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v33, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::U,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v33</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::U,
</autogen>

<autogen>
__KeyToKey__
KeyCode::E,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_REPL
</autogen>
<autogen>
__KeyToKey__
KeyCode::D,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_CODEPEN
</autogen>
<autogen>
__KeyToKey__
KeyCode::N,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_NPM
</autogen>
<autogen>
__KeyToKey__
KeyCode::1,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_KAGGLE
</autogen>
<autogen>
__KeyToKey__
KeyCode::C,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_CODEWARS
</autogen>
<autogen>
__KeyToKey__
KeyCode::A,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_ARXIV
</autogen>
<autogen>
__KeyToKey__
KeyCode::L,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_BITLY
</autogen>
<autogen>
__KeyToKey__
KeyCode::X,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_DROPBOX
</autogen>
<autogen>
__KeyToKey__
KeyCode::V,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_TWITCH
</autogen>
<autogen>
__KeyToKey__
KeyCode::B,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_GITBOOKS
</autogen>
<autogen>
__KeyToKey__
KeyCode::R,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_GOOGLE_DRIVE
</autogen>
<autogen>
__KeyToKey__
KeyCode::H,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_KHAN_ACADEMY
</autogen>
<autogen>
__KeyToKey__
KeyCode::SPACE,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_IN_SAFARI
</autogen>
<autogen>
__KeyToKey__
KeyCode::T,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_GITHUB_TRENDING
</autogen>
<autogen>
__KeyToKey__
KeyCode::Z,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_MOZILLA_DEV
</autogen>
<autogen>
__KeyToKey__
KeyCode::Y,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_NETLIFY
</autogen>
<autogen>
__KeyToKey__
KeyCode::G,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_ANALYTICS
</autogen>
<autogen>
__KeyToKey__
KeyCode::G,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_KAGGLE
</autogen>
<autogen>
__KeyToKey__
KeyCode::I,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_WAKATIME
</autogen>
<autogen>
__KeyToKey__
KeyCode::W,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_AWS
</autogen>
<autogen>
__KeyToKey__
KeyCode::S,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_NPM
</autogen>
</item>

<item>
<name>gen: sticky i - inserting symbols</name>
<identifier>private.launcher_mode_open_apps_v15</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::I,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v15, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::I,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v15</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::I,
</autogen>

<autogen>
__KeyToKey__
KeyCode::B,
KeyCode::T, ModifierFlag::SHIFT_L,
KeyCode::O, ModifierFlag::SHIFT_L,
KeyCode::D, ModifierFlag::SHIFT_L,
KeyCode::O, ModifierFlag::SHIFT_L,
KeyCode::SEMICOLON, ModifierFlag::SHIFT_L,
KeyCode::SPACE,
</autogen>
<autogen>
__KeyToKey__
KeyCode::9,
KeyCode::BRACKET_RIGHT
</autogen>
<autogen>
__KeyToKey__
KeyCode::0,
KeyCode::BRACKET_RIGHT, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::P,
KeyCode::BRACKET_RIGHT
</autogen>
<autogen>
__KeyToKey__
KeyCode::BRACKET_LEFT,
KeyCode::BRACKET_RIGHT, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::DOT,
KeyCode::DOT, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::M,
KeyCode::MINUS,
KeyCode::DOT, ModifierFlag::SHIFT_L,
KeyCode::SPACE
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMAND_R,
KeyCode::BRACKET_LEFT, ModifierFlag::SHIFT_L,
KeyCode::C,
KeyCode::L,
KeyCode::I,
KeyCode::P,
KeyCode::BRACKET_RIGHT, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::Y,
KeyCode::DOT,
KeyCode::SLASH
</autogen>
<autogen>
__KeyToKey__
KeyCode::G,
KeyCode::4, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::6,
KeyCode::6, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::BACKQUOTE,
KeyCode::BACKQUOTE, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::P,
KeyCode::MINUS,
KeyCode::DOT, ModifierFlag::SHIFT_L,
KeyCode::SPACE
</autogen>
<autogen>
__KeyToKey__
KeyCode::Q,
KeyCode::BRACKET_LEFT, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::O,
KeyCode::BRACKET_LEFT
</autogen>
<autogen>
__KeyToKey__
KeyCode::J,
KeyCode::EQUAL
</autogen>
<autogen>
__KeyToKey__
KeyCode::L,
KeyCode::SEMICOLON, ModifierFlag::SHIFT_L,
KeyCode::EQUAL,
KeyCode::SPACE
</autogen>
<autogen>
__KeyToKey__
KeyCode::5,
KeyCode::5, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::F,
KeyCode::MINUS
</autogen>
<autogen>
__KeyToKey__
KeyCode::J,
KeyCode::EQUAL
</autogen>
<autogen>
__KeyToKey__
KeyCode::E,
KeyCode::3, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::2,
KeyCode::2, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::1,
KeyCode::1, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::X,
KeyCode::BACKSLASH, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::S,
KeyCode::MINUS, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::F19,
KeyCode::VK_OPEN_URL_KM_MATCH_SYMBOLS
</autogen>
<autogen>
__KeyToKey__
KeyCode::W,
KeyCode::9, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::TAB,
KeyCode::BACKQUOTE
</autogen>
<autogen>
__KeyToKey__
KeyCode::4,
KeyCode::8, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::SEMICOLON,
KeyCode::SEMICOLON
</autogen>
<autogen>
__KeyToKey__
KeyCode::T,
KeyCode::QUOTE
</autogen>
<autogen>
__KeyToKey__
KeyCode::R,
KeyCode::QUOTE, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::D,
KeyCode::BACKSLASH
</autogen>
<autogen>
__KeyToKey__
KeyCode::S,
KeyCode::4, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::A,
KeyCode::SLASH
</autogen>
<autogen>
__KeyToKey__
KeyCode::Z,
KeyCode::SLASH, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::X,
KeyCode::X, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::C,
KeyCode::7, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMAND_L,
KeyCode::BRACKET_LEFT, ModifierFlag::SHIFT_L,
KeyCode::6, ModifierFlag::SHIFT_L,
KeyCode::BRACKET_RIGHT, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::V,
KeyCode::COMMA, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::M,
KeyCode::M, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::3,
KeyCode::EQUAL, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::N,
KeyCode::N, ModifierFlag::SHIFT_L,
KeyCode::O, ModifierFlag::SHIFT_L,
KeyCode::T, ModifierFlag::SHIFT_L,
KeyCode::E, ModifierFlag::SHIFT_L,
KeyCode::SEMICOLON, ModifierFlag::SHIFT_L,
KeyCode::SPACE, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::H,
KeyCode::SLASH,
KeyCode::SLASH,
KeyCode::SPACE
</autogen>
</item>

<item>
<name>gen: sticky y - websites</name>
<identifier>private.launcher_mode_open_apps_v83</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::Y,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v83, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::Y,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v83</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::Y,
</autogen>

<autogen>
__KeyToKey__
KeyCode::B,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_BRILLIANT
</autogen>
<autogen>
__KeyToKey__
KeyCode::D,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_PINBOARD
</autogen>
<autogen>
__KeyToKey__
KeyCode::H,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_UNSPLASH
</autogen>
</item>

<item>
<name>gen: sticky t - handy actions</name>
<identifier>private.launcher_mode_open_apps_v14</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::T,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v14, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::T,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v14</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::T,
</autogen>

<autogen>
__KeyToKey__
KeyCode::I,
KeyCode::VK_OPEN_URL_KM_NEW_SNIPPETSLAB_SNIPPET
</autogen>
<autogen>
__KeyToKey__
KeyCode::O,
KeyCode::VK_OPEN_URL_KM_NEW_MINDNODE_FILE
</autogen>
<autogen>
__KeyToKey__
KeyCode::M,
KeyCode::D, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMA,
KeyCode::U, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::J,
KeyCode::9, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L, ModifierFlag::COMMAND_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::P,
KeyCode::Z, ModifierFlag::SHIFT_L, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::K,
KeyCode::VK_OPEN_URL_KM_GOTO_KM_GROUP_OF_APP
</autogen>
<autogen>
__KeyToKey__
KeyCode::H,
KeyCode::VK_OPEN_URL_KM_INCREASE_YOUTUBE_PLAYBACK
</autogen>
<autogen>
__KeyToKey__
KeyCode::SPACE,
KeyCode::R, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::SEMICOLON,
KeyCode::VK_OPEN_URL_HAMMERSPOON_RELOAD_CONFIG
</autogen>
<autogen>
__KeyToKey__
KeyCode::U,
KeyCode::VK_OPEN_URL_KM_NEW_SHIP_ISSUE
</autogen>
<autogen>
__KeyToKey__
KeyCode::DOT,
KeyCode::VK_OPEN_URL_KM_STOP_ALL_MACROS
</autogen>
<autogen>
__KeyToKey__
KeyCode::S,
KeyCode::9, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::A,
KeyCode::VK_OPEN_URL_ALFRED_DESKTOP_CLEAN
</autogen>
<autogen>
__KeyToKey__
KeyCode::1,
KeyCode::G, ModifierFlag::CONTROL_L, ModifierFlag::COMMAND_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::Y,
KeyCode::VK_OPEN_URL_ALFRED_GIT_REPOS_UPDATE
</autogen>
<autogen>
__KeyToKey__
KeyCode::L,
KeyCode::VK_OPEN_URL_ALFRED_RELOAD_KARABINER_XML
</autogen>
<autogen>
__KeyToKey__
KeyCode::F19,
KeyCode::VK_OPEN_URL_KM_SCREENSHOT_TO_INBOX
</autogen>
<autogen>
__KeyToKey__
KeyCode::Z,
KeyCode::VK_OPEN_URL_HAMMERSPOON_OPEN_CONSOLE
</autogen>
<autogen>
__KeyToKey__
KeyCode::W,
KeyCode::VK_OPEN_URL_KM_PASS
</autogen>
</item>

<item>
<name>gen: sticky z - open chat apps</name>
<identifier>private.launcher_mode_open_apps_v9</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::Z,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v9, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::Z,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v9</identifier>

<autogen>
__BlockUntilKeyUp__ KeyCode::Z,
</autogen>

<autogen>
__KeyToKey__
KeyCode::N,
KeyCode::VK_OPEN_URL_KM_CREATE_NEW_CONTACT
</autogen>
<autogen>
__KeyToKey__
KeyCode::U,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_RIOT
</autogen>
<autogen>
__KeyToKey__
KeyCode::O,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_WHATSAPP
</autogen>
<autogen>
__KeyToKey__
KeyCode::L,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_SLACK
</autogen>
<autogen>
__KeyToKey__
KeyCode::SEMICOLON,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_DISCORD
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMAND_L,
KeyCode::E, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::K,
KeyCode::VK_OPEN_URL_KM_OPEN_TELEGRAM
</autogen>
<autogen>
__KeyToKey__
KeyCode::E,
KeyCode::VK_OPEN_URL_KM_OPEN_TELEGRAM
</autogen>
<autogen>
__KeyToKey__
KeyCode::SPACE,
KeyCode::E, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::G,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_CONTACTS_TEXT
</autogen>
<autogen>
__KeyToKey__
KeyCode::R,
KeyCode::VK_OPEN_URL_KM_OPEN_URL_GITTER
</autogen>
<autogen>
__KeyToKey__
KeyCode::M,
KeyCode::D, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::F,
KeyCode::VK_OPEN_URL_KM_OPEN_AIRMAIL
</autogen>
<autogen>
__KeyToKey__
KeyCode::I,
KeyCode::VK_OPEN_URL_KM_OPEN_TWEETBOT
</autogen>
<autogen>
__KeyToKey__
KeyCode::W,
KeyCode::VK_OPEN_URL_KM_OPEN_TEXTUAL
</autogen>
<autogen>
__KeyToKey__
KeyCode::T,
KeyCode::VK_OPEN_URL_KM_OPEN_TWEETBOT
</autogen>
<autogen>
__KeyToKey__
KeyCode::J,
KeyCode::VK_OPEN_URL_KM_OPEN_TEXTUAL
</autogen>
</item>

<item>
<name>gen: sticky f - essential</name>
<identifier>private.launcher_mode_open_apps_v2</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::F,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v2, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::F,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v2</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::F,
</autogen>

<autogen>
__KeyToKey__
KeyCode::3,
KeyCode::E, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::4,
KeyCode::N, ModifierFlag::CONTROL_L, ModifierFlag::COMMAND_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMA,
KeyCode::VK_OPEN_URL_KM_ADD_SAFARI_LINK_TO_SELECTED_TEXT_MARKDOWN
</autogen>
<autogen>
__KeyToKey__
KeyCode::W,
KeyCode::VK_OPEN_URL_KM_LOWERCASE_SELECTED_TEXT
</autogen>
<autogen>
__KeyToKey__
KeyCode::D,
KeyCode::F12, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::SPACE,
KeyCode::VK_OPEN_URL_KM_PASTE_SELECTED_TEXT_IN_PREV_APP
</autogen>
<autogen>
__KeyToKey__
KeyCode::B,
KeyCode::VK_OPEN_URL_ALFRED_SYMBOLS_SEARCH
</autogen>
<autogen>
__KeyToKey__
KeyCode::U,
KeyCode::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::S,
KeyCode::P, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::Z,
KeyCode::SPACE, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::T,
KeyCode::SPACE, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::H,
KeyCode::VK_OPEN_URL_KM_MAKE_MARKDOWN_LINK_FROM_SELECTION_AND_ADD_LINK
</autogen>
<autogen>
__KeyToKey__
KeyCode::5,
KeyCode::VK_OPEN_URL_KM_UPPERCASE_SELECTED_TEXT
</autogen>
<autogen>
__KeyToKey__
KeyCode::F19,
KeyCode::3, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::BACKQUOTE,
KeyCode::SEMICOLON, ModifierFlag::CONTROL_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::K,
KeyCode::RETURN
</autogen>
<autogen>
__KeyToKey__
KeyCode::O,
KeyCode::RETURN, ModifierFlag::FN
</autogen>
<autogen>
__KeyToKey__
KeyCode::A,
KeyCode::F7
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMAND_R,
KeyCode::RETURN, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::Q,
KeyCode::VK_OPEN_URL_KM_TITLE_CASE_TEXT
</autogen>
<autogen>
__KeyToKey__
KeyCode::L,
KeyCode::RETURN, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMAND_R,
KeyCode::RETURN, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::N,
KeyCode::RETURN, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::I,
KeyCode::RETURN, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::M,
KeyCode::RETURN, ModifierFlag::OPTION_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::E,
KeyCode::3, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::SEMICOLON,
KeyCode::VK_OPEN_URL_KM_MAP_THINK
</autogen>
<autogen>
__KeyToKey__
KeyCode::J,
KeyCode::VK_OPEN_URL_KM_OPEN_ITERM_TAB_1
</autogen>
<autogen>
__KeyToKey__
KeyCode::DOT,
KeyCode::VK_OPEN_URL_KM_OPEN_ITERM_TAB_2
</autogen>
<autogen>
__KeyToKey__
KeyCode::BACKQUOTE,
KeyCode::T, ModifierFlag::COMMAND_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMAND_L,
KeyCode::S, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMAND_L,
KeyCode::U, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L
</autogen>
</item>

<item>
<name>gen: sticky e - command</name>
<identifier>private.launcher_mode_open_apps_v91</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::E,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v91, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::E,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v91</identifier>

<autogen>
__BlockUntilKeyUp__ KeyCode::E,
</autogen>

<autogen>
__SimultaneousKeyPresses__
KeyCode::J, KeyCode::K,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_DUCKDUCKGO_SEARCH
</autogen>
<autogen>
__KeyToKey__
KeyCode::SEMICOLON,
KeyCode::SEMICOLON, ModifierFlag::COMMAND_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::F19,
KeyCode::VK_OPEN_URL_ALFRED_IMGUR_SCREENSHOT
</autogen>
<autogen>
__KeyToKey__
KeyCode::0,
KeyCode::0, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::TAB,
KeyCode::VK_OPEN_URL_ALFRED_VIEW_SCREENSHOTS
</autogen>
<autogen>
__KeyToKey__
KeyCode::QUOTE,
KeyCode::QUOTE, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::DOT,
KeyCode::DOT, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMAND_L,
KeyCode::SPACE, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::SPACE,
KeyCode::Q, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::BRACKET_LEFT,
KeyCode::BRACKET_LEFT, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::DANISH_DOLLAR,
KeyCode::DANISH_DOLLAR, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::BRACKET_RIGHT,
KeyCode::BRACKET_RIGHT, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::SEMICOLON,
KeyCode::SEMICOLON, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::1,
KeyCode::1, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::Z,
KeyCode::Z, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::2,
KeyCode::2, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::3,
KeyCode::3, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMA,
KeyCode::COMMA, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::4,
KeyCode::4, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::5,
KeyCode::5, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::6,
KeyCode::6, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::7,
KeyCode::7, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::8,
KeyCode::8, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::9,
KeyCode::9, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::Q,
KeyCode::Q, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::W,
KeyCode::W, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::R,
KeyCode::R, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::T,
KeyCode::T, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::Y,
KeyCode::Y, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::U,
KeyCode::U, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::I,
KeyCode::I, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::O,
KeyCode::O, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::P,
KeyCode::P, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::A,
KeyCode::A, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::S,
KeyCode::S, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::D,
KeyCode::D, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::F,
KeyCode::F, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::G,
KeyCode::G, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::H,
KeyCode::H, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::J,
KeyCode::J, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::K,
KeyCode::K, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::L,
KeyCode::L, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::Z,
KeyCode::E, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::X,
KeyCode::X, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::C,
KeyCode::C, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::V,
KeyCode::V, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::B,
KeyCode::B, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::N,
KeyCode::N, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::M,
KeyCode::M, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::SLASH,
KeyCode::SLASH, ModifierFlag::COMMAND_L
</autogen>
</item>

<item>
<name>gen: sticky q - command shift</name>
<identifier>private.launcher_mode_open_apps_v6</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::Q,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v6, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::Q,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v6</identifier>

<autogen>
__BlockUntilKeyUp__ KeyCode::Q,
</autogen>

<autogen>
__KeyToKey__
KeyCode::F19,
KeyCode::VK_OPEN_URL_KM_SCREENSHOT_TO_ANKI
</autogen>
<autogen>
__KeyToKey__
KeyCode::SPACE,
KeyCode::X, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::1,
KeyCode::1, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::2,
KeyCode::2, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::3,
KeyCode::3, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::4,
KeyCode::4, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::5,
KeyCode::5, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::6,
KeyCode::6, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::7,
KeyCode::7, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::8,
KeyCode::8, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::9,
KeyCode::9, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::0,
KeyCode::0, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::MINUS,
KeyCode::MINUS, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::EQUAL,
KeyCode::EQUAL, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::SEMICOLON,
KeyCode::SEMICOLON, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::QUOTE,
KeyCode::QUOTE, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::W,
KeyCode::W, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::E,
KeyCode::E, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::R,
KeyCode::R, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::T,
KeyCode::T, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::Y,
KeyCode::Y, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::U,
KeyCode::U, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::I,
KeyCode::I, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::O,
KeyCode::O, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::P,
KeyCode::P, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::A,
KeyCode::A, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::DOT,
KeyCode::DOT, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::S,
KeyCode::S, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::D,
KeyCode::D, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::F,
KeyCode::F, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::G,
KeyCode::G, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::H,
KeyCode::H, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::J,
KeyCode::J, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::K,
KeyCode::K, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::L,
KeyCode::L, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::Z,
KeyCode::Z, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::X,
KeyCode::X, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::C,
KeyCode::C, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::V,
KeyCode::V, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::B,
KeyCode::B, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::N,
KeyCode::N, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::M,
KeyCode::M, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L,
</autogen>
</item>

<item>
<name>gen: sticky a - control modifier</name>
<identifier>private.launcher_mode_example</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::A,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::A,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::A,
</autogen>

<autogen>
__SimultaneousKeyPresses__
KeyCode::J, KeyCode::K,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_DUCKDUCKGO_SEARCH
</autogen>
<autogen>
__KeyToKey__
KeyCode::SPACE,
KeyCode::X, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::F19,
KeyCode::6, ModifierFlag::OPTION_L, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::9,
KeyCode::9, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::8,
KeyCode::8, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::7,
KeyCode::7, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::6,
KeyCode::6, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMAND_R,
KeyCode::A, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::5,
KeyCode::5, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::4,
KeyCode::4, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::0,
KeyCode::0, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::SEMICOLON,
KeyCode::SEMICOLON, ModifierFlag::CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::BRACKET_LEFT,
KeyCode::BRACKET_LEFT, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::BRACKET_RIGHT,
KeyCode::BRACKET_RIGHT, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::R,
KeyCode::R, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::S,
KeyCode::S, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::1,
KeyCode::1, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::DOT,
KeyCode::DOT, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMA,
KeyCode::COMMA, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::2,
KeyCode::2, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::3,
KeyCode::3, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::Q,
KeyCode::Q, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::W,
KeyCode::W, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::E,
KeyCode::E, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::T,
KeyCode::T, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::Y,
KeyCode::Y, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::U,
KeyCode::U, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::I,
KeyCode::I, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::O,
KeyCode::O, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::P,
KeyCode::P, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::S,
KeyCode::S, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::D,
KeyCode::D, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMAND_L,
KeyCode::S, ModifierFlag::COMMAND_L, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::F,
KeyCode::F, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::G,
KeyCode::G, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::H,
KeyCode::H, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::Z,
KeyCode::Z, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::X,
KeyCode::X, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::C,
KeyCode::C, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::V,
KeyCode::V, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::B,
KeyCode::B, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::N,
KeyCode::N, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::M,
KeyCode::M, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::K,
KeyCode::K, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::J,
KeyCode::J, ModifierFlag::CONTROL_L
</autogen>
<autogen>
__KeyDownUpToKey__
KeyCode::L,
KeyCode::L, ModifierFlag::CONTROL_L
</autogen>
</item>

<!-- added so that I can use vim emulation in iTerm too -->
<replacementdef>
<replacementname>VIM_EMU_ONLY_APPS</replacementname>
<replacementvalue></replacementvalue>
</replacementdef>
<replacementdef>
<replacementname>VIM_EMU_IGNORE_APPS</replacementname>
<replacementvalue>PASSWORD</replacementvalue>
</replacementdef>


<item>
<name>gen: caps lock as control + option and escape when alone</name>
<identifier>private.left_alt_caps_tab_search_snippets</identifier>
<autogen>
__KeyToKey__
KeyCode::F19, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L,
KeyCode::0, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::COMMAND_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::TAB, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::MY_CAPSLOCK | ModifierFlag::NONE,
KeyCode::W, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::COMMAND_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::CONTROL_L,
KeyCode::CONTROL_L, ModifierFlag::MY_CONTROL_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::OPTION_L,
KeyCode::OPTION_L, ModifierFlag::MY_OPTION_L,
</autogen>
<autogen>
__KeyOverlaidModifier__
KeyCode::F19,
KeyCode::OPTION_L, ModifierFlag::CONTROL_L | ModifierFlag::MY_CAPSLOCK,
KeyCode::ESCAPE,
</autogen>
</item>

<item>
<name>gen: right option on single press as app switcher</name>
<identifier>private.right_opt_as_app_switch</identifier>
<autogen>
__KeyOverlaidModifier__
KeyCode::OPTION_R,
KeyCode::OPTION_R,
KeyCode::TAB, ModifierFlag::COMMAND_L
</autogen>
</item>

<item>
<name>gen: caps + left command + top delete to open Fantastical Calendar Input</name>
<identifier>private.caps_left_command_delete_open_fantastical_input</identifier>
<autogen>
__KeyToKey__
KeyCode::DELETE, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L,
KeyCode::E, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::COMMAND_L,
</autogen>
</item>

<item>
<name>gen: sticky rcmd - things</name>
<identifier>private.launcher_mode_open_apps_v81</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::COMMAND_R,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v81, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::SPACE, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v81</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::COMMAND_R,
</autogen>

<autogen>
__KeyToKey__
KeyCode::M,
KeyCode::VK_OPEN_URL_KM_MOVE_MOUSE_TO_CENTRE_SCREEN
</autogen>
<autogen>
__KeyToKey__
KeyCode::RETURN,
KeyCode::T, ModifierFlag::COMMAND_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::I,
KeyCode::MINUS, ModifierFlag::COMMAND_L
</autogen>
<autogen>
__KeyToKey__
KeyCode::O,
KeyCode::EQUAL, ModifierFlag::COMMAND_L
</autogen>
</item>

<item>
<name>gen: sticky b - alfred</name>
<identifier>private.launcher_mode_open_apps_v13</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
<autogen>
__KeyToKey__
KeyCode::S,
</autogen>
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::B,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v13, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::B,
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v13</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::B,
</autogen>

<autogen>
__KeyToKey__
KeyCode::Z,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_TIMEZONES
</autogen>
<autogen>
__KeyToKey__
KeyCode::H,
KeyCode::VK_OPEN_URL_ALFRED_HACKER_NEWS
</autogen>
<autogen>
__KeyToKey__
KeyCode::S,
KeyCode::VK_OPEN_URL_ALFRED_WEATHER_TODAY
</autogen>
<autogen>
__KeyToKey__
KeyCode::I,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_PAW_FILES
</autogen>
<autogen>
__KeyToKey__
KeyCode::O,
KeyCode::VK_OPEN_URL_ALFRED_OPEN_LOCALHOST
</autogen>
<autogen>
__KeyToKey__
KeyCode::SLASH,
KeyCode::VK_OPEN_URL_KM_TEST_HASKELL
</autogen>
<autogen>
__KeyToKey__
KeyCode::K,
KeyCode::VK_OPEN_URL_KM_CLONE_REPO_TO_CLONES_AND_OPEN_WITH_VS_CODE
</autogen>
<autogen>
__KeyToKey__
KeyCode::L,
KeyCode::VK_OPEN_URL_KM_CLONE_REPO_TO_CLONES_AND_OPEN_WITH_SUBLIME
</autogen>
<autogen>
__KeyToKey__
KeyCode::SEMICOLON,
KeyCode::VK_OPEN_URL_KM_FORK_REPO_TO_FORKS_AND_OPEN_WITH_VS_CODE
</autogen>
<autogen>
__KeyToKey__
KeyCode::J,
KeyCode::VK_OPEN_URL_KM_CLONE_REPO_TO_CLONES
</autogen>
<autogen>
__KeyToKey__
KeyCode::D,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_MDN
</autogen>
<autogen>
__KeyToKey__
KeyCode::M,
KeyCode::VK_OPEN_URL_KM_EDIT_TEST_GO
</autogen>
<autogen>
__KeyToKey__
KeyCode::A,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_PAW_FILES
</autogen>
<autogen>
__KeyToKey__
KeyCode::DOT,
KeyCode::VK_OPEN_URL_KM_TEST_JS
</autogen>
<autogen>
__KeyToKey__
KeyCode::COMMA,
KeyCode::VK_OPEN_URL_KM_TEST_TYPESCRIPT
</autogen>
<autogen>
__KeyToKey__
KeyCode::N,
KeyCode::VK_OPEN_URL_KM_TEST_PYTHON
</autogen>
<autogen>
__KeyToKey__
KeyCode::U,
KeyCode::VK_OPEN_URL_ALFRED_UNITS
</autogen>
<autogen>
__KeyToKey__
KeyCode::SPACE,
KeyCode::Y, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L
</autogen>
</item>

<item>
<name>gen: sticky backquote</name>
<identifier>private.launcher_mode_open_apps_v40</identifier>
<pressingphysicalkeys_lessthan>2</pressingphysicalkeys_lessthan>
<modifier_not>
ModifierFlag::COMMAND_L,
ModifierFlag::COMMAND_R,
ModifierFlag::CONTROL_L,
ModifierFlag::CONTROL_R,
ModifierFlag::FN,
ModifierFlag::OPTION_L,
ModifierFlag::OPTION_R,
ModifierFlag::SHIFT_L,
ModifierFlag::SHIFT_R,
</modifier_not>
<autogen>
__KeyOverlaidModifier__
KeyCode::BACKQUOTE,
@begin
KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_private_launcher_mode_v40, ModifierFlag::MY_LAUNCHER_MODE,
@end
@begin
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_MINDNODE
@end
</autogen>
</item>
<item hidden="true">
<identifier vk_config="true">notsave.private_launcher_mode_v40</identifier>
<autogen>
__BlockUntilKeyUp__ KeyCode::BACKQUOTE,
</autogen>

<autogen>
__KeyToKey__
KeyCode::W,
KeyCode::VK_OPEN_URL_KM_TEST_WEB
</autogen>
<autogen>
__KeyToKey__
KeyCode::K,
KeyCode::VK_OPEN_URL_KM_PROJECT_KNOWLEDGE
</autogen>
<autogen>
__KeyToKey__
KeyCode::L,
KeyCode::VK_OPEN_URL_KM_PROJECT_HAMMERSPOON
</autogen>
<autogen>
__KeyToKey__
KeyCode::B,
KeyCode::VK_OPEN_URL_KM_TEST_BASH
</autogen>
<autogen>
__KeyToKey__
KeyCode::A,
KeyCode::A, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::S,
KeyCode::S, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::J,
KeyCode::J, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::D,
KeyCode::D, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::F,
KeyCode::F, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::G,
KeyCode::G, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::H,
KeyCode::H, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L,
</autogen>
<autogen>
__KeyToKey__
KeyCode::SPACE,
KeyCode::S, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L,
</autogen>
</item>

<item>
<name>gen: opt + return - safari</name>
<identifier>private.open_safari_opt_return</identifier>
<autogen>
__KeyToKey__
KeyCode::RETURN, ModifierFlag::OPTION_R,
KeyCode::VK_OPEN_URL_KM_OPEN_SAFARI
</autogen>
</item>

<item>
<name>gen: sim jl</name>
<identifier>private.sim_jl_typinator</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::J, KeyCode::L,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::SPACE, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L
</autogen>
</item>

<item>
<name>gen: sim jk</name>
<identifier>private.sim_jk_google</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::J, KeyCode::K,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_GOOGLE
</autogen>
</item>

<item>
<name>gen: sim l,</name>
<identifier>private.sim_l,_google</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::L, KeyCode::COMMA,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_SAFARI_FOLDERS
</autogen>
</item>

<item>
<name>gen: sim kl</name>
<identifier>private.sim_kl_typinator</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::K, KeyCode::L,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_DASH
</autogen>
</item>

<item>
<name>gen: sim lm</name>
<identifier>private.sim_lm_bookmarks</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::L, KeyCode::M,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SAFARI_BOOKMARKS
</autogen>
</item>

<item>
<name>gen: sim ok</name>
<identifier>private.sim_ok_mindnode_content_search</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::K, KeyCode::O,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_LEARN_ANYTHING_LISTS
</autogen>
</item>

<item>
<name>gen: sim oj</name>
<identifier>private.sim_oj_mindnode</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::J, KeyCode::O,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_AWESOME_LISTS
</autogen>
</item>

<item>
<name>gen: sim km</name>
<identifier>private.sim_km_lab</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::K, KeyCode::M,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_SNIPPETSLAB_SEARCH
</autogen>
</item>

<item>
<name>gen: sim ln</name>
<identifier>private.sim_ln_dash</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::L, KeyCode::N,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_DUCKDUCKGO_SEARCH
</autogen>
</item>

<item>
<name>gen: sim oi</name>
<identifier>private.sim_oi_iterm_profiles</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::O, KeyCode::I,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_ITERM_TTY
</autogen>
</item>

<item>
<name>gen: sim :k</name>
<identifier>private.sim_:k_amazon</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::SEMICOLON, KeyCode::K,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SSH
</autogen>
</item>

<item>
<name>gen: sim :m</name>
<identifier>private.sim_:m_safari_tabs</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::SEMICOLON, KeyCode::M,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_ALFRED_KEYWORDS
</autogen>
</item>

<item>
<name>gen: sim :j</name>
<identifier>private.sim_:j_wiki</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::SEMICOLON, KeyCode::J,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_VIEW_SAFARI_TABS
</autogen>
</item>

<item>
<name>gen: sim :n</name>
<identifier>private.sim_:n_dic</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::SEMICOLON, KeyCode::N,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_CHROME_HISTORY
</autogen>
</item>

<item>
<name>gen: sim on</name>
<identifier>private.sim_on_lab</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::N, KeyCode::O,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SIMPLE_WIKI
</autogen>
</item>

<item>
<name>gen: sim om</name>
<identifier>private.sim_om_wind</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::M, KeyCode::O,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_CHROME_HISTORY
</autogen>
</item>

<item>
<name>gen: sim kn</name>
<identifier>private.sim_kn_normal</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::K, KeyCode::N,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_GOOGLE_LUCKY
</autogen>
</item>

<item>
<name>gen: sim :h</name>
<identifier>private.sim_semh_docs</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::SEMICOLON, KeyCode::H,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_CHROME_HISTORY
</autogen>
</item>

<item>
<name>gen: sim space :</name>
<identifier>private.sim_sem__dash</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::SEMICOLON, KeyCode::SPACE,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_DASH_PROFILE_SWITCH
</autogen>
</item>

<item>
<name>gen: sim space j</name>
<identifier>private.sim_space_j_dash</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::J, KeyCode::SPACE,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_KM_GET_CURRENT_URL_FROM_SAFARI
</autogen>
</item>

<item>
<name>gen: sim space l</name>
<identifier>private.sim_space_l_curr_tabs</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::L, KeyCode::SPACE,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_SAFARI_HISTORY
</autogen>
</item>

<item>
<name>gen: sim space k = safari</name>
<identifier>private.sim_space_k_saf</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::K, KeyCode::SPACE,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_YOUTUBE_SEARCH
</autogen>
</item>

<item>
<name>gen: sim space o = xcode</name>
<identifier>private.sim_space_o_xcode</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::O, KeyCode::SPACE,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_PDF
</autogen>
</item>

<item>
<name>gen: sim space m</name>
<identifier>private.sim_space_wiki</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::M, KeyCode::SPACE,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_MENUBAR_SEARCH
</autogen>
</item>

<item>
<name>gen: sim space n</name>
<identifier>private.sim_space_n_xcode</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::N, KeyCode::SPACE,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_KM_MACROS_SEARCH
</autogen>
</item>

<item>
<name>gen: sim space i</name>
<identifier>private.sim_space_i_youtube</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::I, KeyCode::SPACE,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_SEARCH_GOOGLE_IMAGES
</autogen>
</item>

<item>
<name>gen: sim space h</name>
<identifier>private.sim_space_h_youtube</identifier>
<autogen>
__SimultaneousKeyPresses__
KeyCode::H, KeyCode::SPACE,
KeyCode::VK_LOCK_ALL_FORCE_OFF,
KeyCode::VK_OPEN_URL_ALFRED_CHROME_HISTORY
</autogen>
</item>

<item>
<only>MINDNODE</only>
<name>gen: left command to option - ONLY: MindNode</name>
<identifier>private.mindnode_left_cmd_to_opt</identifier>
<autogen>
__KeyToKey__
PointingButton::LEFT, ModifierFlag::COMMAND_L,
PointingButton::LEFT, ModifierFlag::OPTION_L
</autogen>
</item>

</root>
